import {
  a,
  e
} from "./chunk-KD5XTCN6.js";

// node_modules/@tauri-apps/api/chunk-SINVUGUJ.js
var x = {};
e(x, { BaseDirectory: () => F, Dir: () => F, copyFile: () => c, createDir: () => d, exists: () => v, readBinaryFile: () => a2, readDir: () => m, readTextFile: () => l, removeDir: () => g, removeFile: () => O, renameFile: () => _, writeBinaryFile: () => f, writeFile: () => u, writeTextFile: () => u });
var F = ((n) => (n[n.Audio = 1] = "Audio", n[n.Cache = 2] = "Cache", n[n.Config = 3] = "Config", n[n.Data = 4] = "Data", n[n.LocalData = 5] = "LocalData", n[n.Desktop = 6] = "Desktop", n[n.Document = 7] = "Document", n[n.Download = 8] = "Download", n[n.Executable = 9] = "Executable", n[n.Font = 10] = "Font", n[n.Home = 11] = "Home", n[n.Picture = 12] = "Picture", n[n.Public = 13] = "Public", n[n.Runtime = 14] = "Runtime", n[n.Template = 15] = "Template", n[n.Video = 16] = "Video", n[n.Resource = 17] = "Resource", n[n.App = 18] = "App", n[n.Log = 19] = "Log", n[n.Temp = 20] = "Temp", n[n.AppConfig = 21] = "AppConfig", n[n.AppData = 22] = "AppData", n[n.AppLocalData = 23] = "AppLocalData", n[n.AppCache = 24] = "AppCache", n[n.AppLog = 25] = "AppLog", n))(F || {});
async function l(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "readTextFile", path: i, options: t } });
}
async function a2(i, t = {}) {
  let s = await a({ __tauriModule: "Fs", message: { cmd: "readFile", path: i, options: t } });
  return Uint8Array.from(s);
}
async function u(i, t, s) {
  typeof s == "object" && Object.freeze(s), typeof i == "object" && Object.freeze(i);
  let e2 = { path: "", contents: "" }, r = s;
  return typeof i == "string" ? e2.path = i : (e2.path = i.path, e2.contents = i.contents), typeof t == "string" ? e2.contents = t ?? "" : r = t, a({ __tauriModule: "Fs", message: { cmd: "writeFile", path: e2.path, contents: Array.from(new TextEncoder().encode(e2.contents)), options: r } });
}
async function f(i, t, s) {
  typeof s == "object" && Object.freeze(s), typeof i == "object" && Object.freeze(i);
  let e2 = { path: "", contents: [] }, r = s;
  return typeof i == "string" ? e2.path = i : (e2.path = i.path, e2.contents = i.contents), t && "dir" in t ? r = t : typeof i == "string" && (e2.contents = t ?? []), a({ __tauriModule: "Fs", message: { cmd: "writeFile", path: e2.path, contents: Array.from(e2.contents instanceof ArrayBuffer ? new Uint8Array(e2.contents) : e2.contents), options: r } });
}
async function m(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "readDir", path: i, options: t } });
}
async function d(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "createDir", path: i, options: t } });
}
async function g(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "removeDir", path: i, options: t } });
}
async function c(i, t, s = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "copyFile", source: i, destination: t, options: s } });
}
async function O(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "removeFile", path: i, options: t } });
}
async function _(i, t, s = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "renameFile", oldPath: i, newPath: t, options: s } });
}
async function v(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "exists", path: i, options: t } });
}

export {
  x,
  F,
  l,
  a2 as a,
  u,
  f,
  m,
  d,
  g,
  c,
  O,
  _,
  v
};
//# sourceMappingURL=chunk-EYJTSB3H.js.map
