import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/turbocommons-ts/utils/NumericUtils.js
var require_NumericUtils = __commonJS({
  "node_modules/turbocommons-ts/utils/NumericUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringUtils_1 = require_StringUtils();
    var NumericUtils = function() {
      function r() {
      }
      return r.isNumeric = function(r2) {
        return StringUtils_1.StringUtils.isString(r2) && (r2 = String(r2).trim()), !isNaN(parseFloat(r2)) && isFinite(r2);
      }, r.isInteger = function(i) {
        return !!r.isNumeric(i) && String(i).indexOf(".") < 0;
      }, r.forceNumeric = function(r2, i, e) {
        if (void 0 === i && (i = ""), void 0 === e && (e = "must be numeric"), !this.isNumeric(r2))
          throw new Error(i + " " + e);
      }, r.forcePositiveInteger = function(r2, i, e) {
        if (void 0 === i && (i = ""), void 0 === e && (e = "must be a positive integer"), !this.isInteger(r2) || r2 <= 0)
          throw new Error(i + " " + e);
      }, r.getNumeric = function(i) {
        if (r.isNumeric(i))
          return Number(i);
        throw new Error("value is not numeric");
      }, r.generateRandomInteger = function(i, e) {
        if (!r.isInteger(e) || !r.isInteger(i))
          throw new Error("max and min must be integers");
        if (e <= i)
          throw new Error("max must be higher than min");
        return Math.floor(Math.random() * (e - i + 1)) + i;
      }, r;
    }();
    exports.NumericUtils = NumericUtils;
  }
});

// node_modules/turbocommons-ts/managers/ValidationManager.js
var require_ValidationManager = __commonJS({
  "node_modules/turbocommons-ts/managers/ValidationManager.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringUtils_1 = require_StringUtils();
    var NumericUtils_1 = require_NumericUtils();
    var ArrayUtils_1 = require_ArrayUtils();
    var ObjectUtils_1 = require_ObjectUtils();
    var ValidationManager = function() {
      function t() {
        this._validationStatus = [{ tag: "", status: t.OK }], this._failedMessages = [];
      }
      return t.prototype.getStatus = function(t2) {
        void 0 === t2 && (t2 = "");
        for (var i = 0, r = ArrayUtils_1.ArrayUtils.isArray(t2) ? t2 : [t2], s = 0, a = this._validationStatus; s < a.length; s++) {
          var e = a[s];
          ("" === t2 || r.indexOf(e.tag) >= 0) && e.status > i && (i = e.status);
        }
        return i;
      }, t.prototype.ok = function(i) {
        return void 0 === i && (i = ""), this.getStatus(i) === t.OK;
      }, t.prototype.notOk = function(i) {
        return void 0 === i && (i = ""), this.getStatus(i) !== t.OK;
      }, t.prototype.getFirstMessage = function(t2) {
        void 0 === t2 && (t2 = "");
        for (var i = ArrayUtils_1.ArrayUtils.isArray(t2) ? t2 : [t2], r = 0, s = this._failedMessages; r < s.length; r++) {
          var a = s[r];
          if ("" === t2 || null === t2 || ArrayUtils_1.ArrayUtils.isArray(t2) && 0 === t2.length || i.indexOf(a.tag) >= 0)
            return a.message;
        }
        return "";
      }, t.prototype.getLastMessage = function(t2) {
        void 0 === t2 && (t2 = "");
        for (var i = ArrayUtils_1.ArrayUtils.isArray(t2) ? t2 : [t2], r = this._failedMessages.length - 1; r >= 0; r--)
          if ("" === t2 || null === t2 || ArrayUtils_1.ArrayUtils.isArray(t2) && 0 === t2.length || i.indexOf(this._failedMessages[r].tag) >= 0)
            return this._failedMessages[r].message;
        return "";
      }, t.prototype.isTrue = function(t2, i, r, s) {
        return void 0 === i && (i = "value is not true"), void 0 === r && (r = ""), void 0 === s && (s = false), this._updateValidationStatus(true === t2, i, r, s);
      }, t.prototype.isBoolean = function(t2, i, r, s) {
        return void 0 === i && (i = "value is not a boolean"), void 0 === r && (r = ""), void 0 === s && (s = false), this._updateValidationStatus("boolean" == typeof t2, i, r, s);
      }, t.prototype.isNumeric = function(t2, i, r, s) {
        return void 0 === i && (i = "value is not a number"), void 0 === r && (r = ""), void 0 === s && (s = false), this._updateValidationStatus(NumericUtils_1.NumericUtils.isNumeric(t2), i, r, s);
      }, t.prototype.isNumericBetween = function(t2, i, r, s, a, e) {
        return void 0 === s && (s = "value is not between min and max"), void 0 === a && (a = ""), void 0 === e && (e = false), this._updateValidationStatus(NumericUtils_1.NumericUtils.isNumeric(t2) && t2 >= i && t2 <= r, s, a, e);
      }, t.prototype.isString = function(t2, i, r, s) {
        return void 0 === i && (i = "value is not a string"), void 0 === r && (r = ""), void 0 === s && (s = false), this._updateValidationStatus(StringUtils_1.StringUtils.isString(t2), i, r, s);
      }, t.prototype.isUrl = function(t2, i, r, s) {
        return void 0 === i && (i = "value is not an URL"), void 0 === r && (r = ""), void 0 === s && (s = false), this._updateValidationStatus(StringUtils_1.StringUtils.isUrl(t2), i, r, s);
      }, t.prototype.isArray = function(t2, i, r, s) {
        return void 0 === i && (i = "value is not an array"), void 0 === r && (r = ""), void 0 === s && (s = false), this._updateValidationStatus(ArrayUtils_1.ArrayUtils.isArray(t2), i, r, s);
      }, t.prototype.isObject = function(t2, i, r, s) {
        return void 0 === i && (i = "value is not an object"), void 0 === r && (r = ""), void 0 === s && (s = false), this._updateValidationStatus(ObjectUtils_1.ObjectUtils.isObject(t2), i, r, s);
      }, t.prototype.isFilledIn = function(t2, i, r, s, a) {
        return void 0 === i && (i = []), void 0 === r && (r = "value is required"), void 0 === s && (s = ""), void 0 === a && (a = false), this._updateValidationStatus(!StringUtils_1.StringUtils.isEmpty(t2, i), r, s, a);
      }, t.prototype.isDate = function() {
        return false;
      }, t.prototype.isMail = function() {
        return false;
      }, t.prototype.isEqualTo = function(t2, i, r, s, a) {
        void 0 === r && (r = "values are not equal"), void 0 === s && (s = ""), void 0 === a && (a = false);
        var e = false;
        return ArrayUtils_1.ArrayUtils.isArray(t2) && ArrayUtils_1.ArrayUtils.isArray(i) ? e = ArrayUtils_1.ArrayUtils.isEqualTo(t2, i) : ObjectUtils_1.ObjectUtils.isObject(t2) && ObjectUtils_1.ObjectUtils.isObject(i) ? e = ObjectUtils_1.ObjectUtils.isEqualTo(t2, i) : t2 === i && (e = true), this._updateValidationStatus(e, r, s, a);
      }, t.prototype.isMinimumWords = function(t2) {
        return "" === t2;
      }, t.prototype.isNIF = function(t2) {
        return "" === t2;
      }, t.prototype.isMinimumLength = function(t2) {
        return "" === t2;
      }, t.prototype.isMaximumLength = function(t2) {
        return "" === t2;
      }, t.prototype.isPostalCode = function(t2) {
        return "" === t2;
      }, t.prototype.isPhone = function(t2) {
        return "" === t2;
      }, t.prototype.isHtmlFormValid = function(t2) {
        return "" === t2;
      }, t.prototype.reset = function() {
        this._validationStatus = [{ tag: "", status: t.OK }], this._failedMessages = [];
      }, t.prototype._updateValidationStatus = function(i, r, s, a) {
        if (void 0 === s && (s = ""), !i) {
          for (var e = ArrayUtils_1.ArrayUtils.isArray(s) ? s : [s], o = 0, n = e; o < n.length; o++) {
            for (var u = n[o], l = false, d = 0, p = this._validationStatus; d < p.length; d++) {
              if (p[d].tag === u) {
                l = true;
                break;
              }
            }
            l || this._validationStatus.push({ tag: String(u), status: t.OK });
          }
          for (var v = 0, y = e; v < y.length; v++) {
            u = y[v];
            for (var c = 0; c < this._validationStatus.length; c++)
              if (this._validationStatus[c].tag === u) {
                this._failedMessages.push({ tag: u, message: r }), this._validationStatus[c].status = a && this._validationStatus[c].status != t.ERROR ? t.WARNING : t.ERROR;
                break;
              }
          }
        }
        return i;
      }, t.OK = 0, t.WARNING = 1, t.ERROR = 2, t;
    }();
    exports.ValidationManager = ValidationManager;
  }
});

// node_modules/turbocommons-ts/utils/ObjectUtils.js
var require_ObjectUtils = __commonJS({
  "node_modules/turbocommons-ts/utils/ObjectUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ArrayUtils_1 = require_ArrayUtils();
    var StringUtils_1 = require_StringUtils();
    var ValidationManager_1 = require_ValidationManager();
    var ObjectUtils = function() {
      function r() {
      }
      return r.isObject = function(r2) {
        return !(ArrayUtils_1.ArrayUtils.isArray(r2) || null === r2 || "object" != typeof r2);
      }, r.getKeys = function(t) {
        if (!r.isObject(t))
          throw new Error("parameter must be an object");
        return Object.keys(t);
      }, r.isEqualTo = function(t, e) {
        var i = new ValidationManager_1.ValidationManager();
        if (!r.isObject(t) || !r.isObject(e))
          throw new Error("parameters must be objects");
        var n = r.getKeys(t).sort(), s = r.getKeys(e).sort();
        if (!ArrayUtils_1.ArrayUtils.isEqualTo(n, s))
          return false;
        for (var o = 0; o < n.length; o++)
          if (!i.isEqualTo(t[n[o]], e[s[o]]))
            return false;
        return true;
      }, r.isStringFound = function(t, e, i) {
        if (void 0 === i && (i = true), !r.isObject(t))
          throw new Error("parameter must be an object");
        if (!StringUtils_1.StringUtils.isString(e))
          throw new Error("str is not a string");
        for (var n = 0, s = r.getKeys(t); n < s.length; n++) {
          var o = s[n];
          if (StringUtils_1.StringUtils.isString(t[o]) && (i && t[o].indexOf(e) >= 0 || !i && t[o].toLowerCase().indexOf(e.toLowerCase()) >= 0))
            return true;
          if (ArrayUtils_1.ArrayUtils.isArray(t[o]) && ArrayUtils_1.ArrayUtils.isStringFound(t[o], e, i))
            return true;
          if (r.isObject(t[o]) && r.isStringFound(t[o], e, i))
            return true;
        }
        return false;
      }, r.merge = function(t, e) {
        if (!r.isObject(t) || !r.isObject(e))
          throw new Error("destination and source must objects");
        for (var i = 0, n = r.getKeys(e); i < n.length; i++) {
          var s = n[i];
          t.hasOwnProperty(s) && r.isObject(e[s]) && r.isObject(t[s]) ? t[s] = r.merge(t[s], e[s]) : t[s] = r.clone(e[s]);
        }
        return t;
      }, r.clone = function(t) {
        if (null == t || t instanceof RegExp || "object" != typeof t)
          return t;
        var e = new t.constructor();
        for (var i in t)
          t.hasOwnProperty(i) && (e[i] = r.clone(t[i]));
        return e;
      }, r;
    }();
    exports.ObjectUtils = ObjectUtils;
  }
});

// node_modules/turbocommons-ts/utils/ArrayUtils.js
var require_ArrayUtils = __commonJS({
  "node_modules/turbocommons-ts/utils/ArrayUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ObjectUtils_1 = require_ObjectUtils();
    var StringUtils_1 = require_StringUtils();
    var ValidationManager_1 = require_ValidationManager();
    var ArrayUtils = function() {
      function r() {
      }
      return r.isArray = function(r2) {
        return "[object Array]" === Object.prototype.toString.call(r2);
      }, r.isEqualTo = function(t, e) {
        if (!r.isArray(t) || !r.isArray(e))
          throw new Error("parameters must be arrays");
        if (t.length != e.length)
          return false;
        for (var i = 0, a = t.length; i < a; i++)
          if (r.isArray(t[i]) && r.isArray(e[i])) {
            if (!r.isEqualTo(t[i], e[i]))
              return false;
          } else if (ObjectUtils_1.ObjectUtils.isObject(t[i]) && ObjectUtils_1.ObjectUtils.isObject(e[i])) {
            if (!ObjectUtils_1.ObjectUtils.isEqualTo(t[i], e[i]))
              return false;
          } else if (t[i] !== e[i])
            return false;
        return true;
      }, r.isStringFound = function(t, e, i) {
        if (void 0 === i && (i = true), !r.isArray(t))
          throw new Error("parameter must be an array");
        if (!StringUtils_1.StringUtils.isString(e))
          throw new Error("str is not a string");
        for (var a = 0; a < t.length; a++) {
          if (StringUtils_1.StringUtils.isString(t[a]) && (i && t[a].indexOf(e) >= 0 || !i && t[a].toLowerCase().indexOf(e.toLowerCase()) >= 0))
            return true;
          if (r.isArray(t[a]) && r.isStringFound(t[a], e, i))
            return true;
          if (ObjectUtils_1.ObjectUtils.isObject(t[a]) && ObjectUtils_1.ObjectUtils.isStringFound(t[a], e, i))
            return true;
        }
        return false;
      }, r.forceNonEmptyArray = function(r2, t, e) {
        if (void 0 === t && (t = ""), void 0 === e && (e = "must be a non empty array"), !this.isArray(r2) || r2.length <= 0)
          throw new Error(t + " " + e);
      }, r.removeElement = function(t, e) {
        if (!r.isArray(t))
          throw new Error("parameter must be an array");
        var i = [];
        if (r.isArray(e))
          for (var a = 0; a < t.length; a++)
            r.isArray(t[a]) && r.isEqualTo(e, t[a]) || i.push(t[a]);
        else
          for (var n = 0; n < t.length; n++)
            e !== t[n] && i.push(t[n]);
        return i;
      }, r.removeDuplicateElements = function(t) {
        if (!r.isArray(t))
          throw new Error("parameter must be an array");
        for (var e = [], i = t.length, a = new ValidationManager_1.ValidationManager(), n = 0; n < i; n++) {
          for (var s = false, o = e.length, l = 0; l < o; l++)
            if (a.isEqualTo(t[n], e[l])) {
              s = true;
              break;
            }
          s || e.push(t[n]);
        }
        return e;
      }, r.hasDuplicateElements = function(t) {
        if (!r.isArray(t))
          throw new Error("parameter must be an array");
        for (var e = t.length, i = new ValidationManager_1.ValidationManager(), a = 0; a < e; a++)
          for (var n = a + 1; n < e; n++)
            if (i.isEqualTo(t[a], t[n]))
              return true;
        return false;
      }, r.getDuplicateElements = function(t) {
        if (!r.isArray(t))
          throw new Error("parameter must be an array");
        for (var e = [], i = t.length, a = new ValidationManager_1.ValidationManager(), n = 0; n < i; n++)
          for (var s = n + 1; s < i; s++)
            a.isEqualTo(t[n], t[s]) && e.push(t[n]);
        return r.removeDuplicateElements(e);
      }, r;
    }();
    exports.ArrayUtils = ArrayUtils;
  }
});

// node_modules/turbocommons-ts/utils/StringUtils.js
var require_StringUtils = __commonJS({
  "node_modules/turbocommons-ts/utils/StringUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var NumericUtils_1 = require_NumericUtils();
    var ArrayUtils_1 = require_ArrayUtils();
    var ObjectUtils_1 = require_ObjectUtils();
    var StringUtils = function() {
      function r() {
      }
      return r.isString = function(r2) {
        return "string" == typeof r2 || r2 instanceof String;
      }, r.forceString = function(t, e, n) {
        if (void 0 === e && (e = ""), void 0 === n && (n = "must be a string"), !r.isString(t))
          throw new Error(e + " " + n);
      }, r.isUrl = function(t) {
        var e = false;
        if (!r.isEmpty(t) && r.isString(t)) {
          e = !!(t.length < 2083 && new RegExp("^(?!mailto:)(?:(?:http|https|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$", "i").test(t));
        }
        return e;
      }, r.isEmpty = function(t, e) {
        if (void 0 === e && (e = []), !r.isString(t)) {
          if (null == t || "" == t)
            return true;
          throw new Error("value is not a string");
        }
        return "" === r.replace(t, e.concat([" ", "\n", "\r", "	"]), "");
      }, r.forceNonEmptyString = function(t, e, n) {
        if (void 0 === e && (e = ""), void 0 === n && (n = "must be a non empty string"), !r.isString(t) || r.isEmpty(t))
          throw new Error(e + " " + n);
      }, r.isCamelCase = function() {
      }, r.isSnakeCase = function() {
      }, r.replace = function(t, e, n, i) {
        if (void 0 === i && (i = -1), !r.isString(t))
          throw new Error("string is not valid");
        if (!r.isString(e) && !ArrayUtils_1.ArrayUtils.isArray(e))
          throw new Error("search is not a string or array");
        if (!r.isString(n) && !ArrayUtils_1.ArrayUtils.isArray(n))
          throw new Error("replacement is not a string or array");
        if (!NumericUtils_1.NumericUtils.isInteger(i) || 0 === i)
          throw new Error("count must be a positive integer");
        var l = t, o = r.isString(e) ? [String(e)] : e, s = r.isString(n) ? [String(n)] : n;
        if (s.length > 1 && o.length !== s.length)
          throw new Error("search and replacement arrays must have the same length");
        for (var a = 0; a < o.length; a++)
          if ("" !== o[a]) {
            var u = 1 === s.length ? s[0] : s[a];
            void 0 !== u && null !== u || (u = "");
            for (var f = [], g = l.split(o[a]), h = 0; h < g.length; h++)
              f.push(g[h]), h < g.length - 1 && (i < 0 || h < i ? f.push(u) : f.push(o[a]));
            l = f.join("");
          }
        return l;
      }, r.replaceMulti = function(t, e, n, i) {
        if (void 0 === i && (i = -1), r.isString(t))
          return r.replace(t, e, n, i);
        var l = ObjectUtils_1.ObjectUtils.clone(t);
        if (ArrayUtils_1.ArrayUtils.isArray(l))
          for (var o = 0; o < l.length; o++)
            l[o] = r.replaceMulti(l[o], e, n, i);
        else if (ObjectUtils_1.ObjectUtils.isObject(l))
          for (var s = 0, a = ObjectUtils_1.ObjectUtils.getKeys(l); s < a.length; s++) {
            var u = a[s];
            l[u] = r.replaceMulti(l[u], e, n, i);
          }
        return l;
      }, r.trim = function(t, e) {
        return void 0 === e && (e = " \n\r"), r.trimLeft(r.trimRight(t, e), e);
      }, r.trimLeft = function(t, e) {
        if (void 0 === e && (e = " \n\r"), !r.isString(t))
          throw new Error("value is not a string");
        return t.replace(new RegExp("^[" + e + "]+"), "");
      }, r.trimRight = function(t, e) {
        if (void 0 === e && (e = " \n\r"), !r.isString(t))
          throw new Error("value is not a string");
        return t.replace(new RegExp("[" + e + "]+$"), "");
      }, r.pad = function(t, e, n, i) {
        if (void 0 === n && (n = "0"), void 0 === i && (i = "LEFT"), !r.isString(t) || !r.isString(n) || n.length <= 0)
          throw new Error("string and padString must be strings");
        if (!NumericUtils_1.NumericUtils.isInteger(e))
          throw new Error("padLength is not an int");
        if ("LEFT" !== i && "RIGHT" !== i)
          throw new Error("mode must be LEFT or RIGHT");
        var l = t;
        if ("RIGHT" === i)
          for (; l.length < e; )
            l += n.substr(0, e - l.length);
        else
          for (; l.length < e; )
            l = n.substr(-(e - l.length)) + l;
        return l;
      }, r.countStringOccurences = function(t, e) {
        if (!r.isString(t) || !r.isString(e))
          throw new Error("value is not a string");
        if ("" === e)
          throw new Error("cannot count empty string occurences");
        return t.split(e).length - 1;
      }, r.countByCase = function(t, e) {
        if (void 0 === e && (e = r.FORMAT_ALL_UPPER_CASE), t = r.removeAccents(t), e === r.FORMAT_ALL_UPPER_CASE)
          return t.replace(/[^A-Z]+/g, "").length;
        if (e === r.FORMAT_ALL_LOWER_CASE)
          return t.replace(/[^a-z]+/g, "").length;
        throw new Error("invalid case value");
      }, r.countWords = function(t, e) {
        void 0 === e && (e = " ");
        for (var n = 0, i = r.getLines(t), l = 0; l < i.length; l++)
          for (var o = i[l].split(e), s = 0; s < o.length; s++)
            r.isEmpty(o[s]) || n++;
        return n;
      }, r.countPathElements = function(t) {
        return "" == (t = 0 === (t = r.formatPath(t, "/")).indexOf("/") ? t.substr(1) : t) ? 0 : t.split("/").length;
      }, r.limitLen = function(t, e, n) {
        if (void 0 === e && (e = 100), void 0 === n && (n = " ..."), e <= 0 || !NumericUtils_1.NumericUtils.isNumeric(e))
          throw new Error("limit must be a positive numeric value");
        return r.isString(t) ? t.length <= e ? t : n.length > e ? n.substring(0, e) : t.substring(0, e - n.length) + n : "";
      }, r.getDomainFromUrl = function(t) {
        var e = r.getHostNameFromUrl(t);
        return (e = e.split(".")).length > 2 && e.shift(), e.join(".");
      }, r.getHostNameFromUrl = function(t) {
        if (r.isEmpty(t) || !r.isUrl(t))
          return "";
        var e = document.createElement("a");
        e.href = t;
        var n = (e.host.match(/\./g) || []).length;
        return n <= 0 || n > 2 ? "" : e.host;
      }, r.getLines = function(t, e) {
        void 0 === e && (e = [/\s+/g]);
        var n = [];
        if (!r.isString(t))
          return n;
        for (var i = t.split(/\r?\n|\n|\r/), l = 0; l < i.length; l++)
          if (r.isString(i[l])) {
            for (var o = i[l], s = 0; s < e.length; s++)
              o = o.replace(e[s], "");
            "" != o && n.push(i[l]);
          }
        return n;
      }, r.getKeyWords = function() {
      }, r.getPath = function(t, e, n) {
        if (void 0 === e && (e = 1), void 0 === n && (n = "/"), r.isEmpty(t))
          return "";
        if ("/" === (t = r.formatPath(t, "/")))
          return t;
        var i = (0 === t.indexOf("/") ? t.substr(1) : t).split("/");
        if (e > i.length || e < -1)
          return "";
        for (var l = [], o = i.length - e; o < i.length; o++)
          l.push(i[o]);
        return l.length <= 0 ? t : r.formatPath(t.substring(0, t.length - l.join("/").length - 1), n);
      }, r.getPathElement = function(t, e) {
        if (void 0 === e && (e = -1), r.isEmpty(t))
          return "";
        var n = (t = 0 === (t = r.formatPath(t, "/")).indexOf("/") ? t.substr(1) : t).split("/");
        if (e >= n.length || e < -n.length)
          throw new Error("Invalid position specified");
        return e < 0 ? n[n.length + e] : n[e];
      }, r.getPathElementWithoutExt = function(t, e, n) {
        void 0 === e && (e = -1), void 0 === n && (n = ".");
        var i = r.getPathElement(t, e);
        return i.indexOf(n) >= 0 && (i = i.substr(0, i.lastIndexOf(n))), i;
      }, r.getPathExtension = function(t, e, n) {
        void 0 === e && (e = -1), void 0 === n && (n = ".");
        var i = r.getPathElement(t, e);
        return i.indexOf(n) < 0 ? "" : i.substr(i.lastIndexOf(n) + 1);
      }, r.getSchemeFromUrl = function(t) {
        if (null == t || void 0 == t)
          return "";
        if (!r.isString(t))
          throw new Error("Specified value must be a string");
        if (!r.isUrl(t))
          return "";
        var e = t.split("://");
        return 2 === e.length ? e[0] : "";
      }, r.formatCase = function(t, e) {
        if (!r.isString(t))
          throw new Error("value is not a string");
        if (r.isEmpty(t))
          return t;
        if (e === r.FORMAT_START_CASE)
          return t.split(" ").map(function(r2) {
            return (r2.length > 0 ? r2[0].toUpperCase() : "") + (r2.length > 1 ? r2.substr(1).toLowerCase() : "");
          }).join(" ");
        if (e === r.FORMAT_ALL_UPPER_CASE)
          return t.toUpperCase();
        if (e === r.FORMAT_ALL_LOWER_CASE)
          return t.toLowerCase();
        if (e === r.FORMAT_FIRST_UPPER_REST_LOWER)
          return t.charAt(0).toUpperCase() + t.slice(1).toLowerCase();
        if (e.indexOf("CAMEL_CASE") > 0) {
          var n = r.removeAccents(t).replace(/[^a-z0-9]+/gi, " ").trim().split(" ");
          if (n.length > 1)
            for (var i = 1; i < n.length; i++)
              n[i] = n[i].charAt(0).toUpperCase() + n[i].slice(1);
          return t = n.join(""), e == r.FORMAT_UPPER_CAMEL_CASE ? t.charAt(0).toUpperCase() + t.slice(1) : e == r.FORMAT_LOWER_CAMEL_CASE ? t.charAt(0).toLowerCase() + t.slice(1) : t;
        }
        throw new Error("Unknown format specified");
      }, r.formatPath = function(t, e) {
        if (void 0 === e && (e = "/"), !r.isString(t))
          throw new Error("path must be a string");
        if ("/" !== e && "\\" !== e)
          throw new Error("separator must be a slash or backslash");
        for (t = (t = t.replace(/\//g, e)).replace(/\\/g, e); t.indexOf(e + e) >= 0; )
          t = t.replace(e + e, e);
        return t.length > 1 && t.substr(t.length - 1) === e && (t = t.substr(0, t.length - 1)), t;
      }, r.formatUrl = function(t) {
        if ("" == t)
          return "";
        if (!r.isString(t))
          throw new Error("url must be a string");
        if (r.isEmpty(t))
          return t;
        for (t = (t = (t = (t = t.trim()).replace(/\//g, "/")).replace(/\\/g, "/")).replace(/\:\/\//g, "@@@"); t.indexOf("//") >= 0; )
          t = t.replace("//", "/");
        return t = t.replace(/@@@/g, "://"), "" === this.getSchemeFromUrl(t) && r.isUrl("http://" + t) ? "http://" + t : t;
      }, r.formatForFullTextSearch = function() {
      }, r.compareByLevenshtein = function(t, e) {
        if (!r.isString(t) || !r.isString(e))
          throw new Error("string1 and string2 must be strings");
        var n = t.length, i = e.length;
        if (n < i)
          return r.compareByLevenshtein(e, t);
        if (0 == n)
          return i;
        if (t === e)
          return 0;
        for (var l = [], o = [], s = 0; s <= i; s++)
          o.push(s);
        for (s = 0; s < n; s++) {
          (l = [])[0] = s + 1;
          for (var a = t.substr(s, 1), u = 0; u < i; u++) {
            var f = e.substr(u, 1), g = o[u + 1] + 1, h = l[u] + 1, c = o[u] + (a !== f ? 1 : 0);
            l.push(Math.min(g, h, c));
          }
          o = l;
        }
        return o[i];
      }, r.compareSimilarityPercent = function(t, e) {
        var n = r.compareByLevenshtein(t, e);
        return 0 === n ? 100 : 100 * (1 - n / Math.max(t.length, e.length));
      }, r.generateRandom = function(t, e, n) {
        if (void 0 === n && (n = ["0-9", "a-z", "A-Z"]), t < 0 || !NumericUtils_1.NumericUtils.isInteger(t) || e < 0 || !NumericUtils_1.NumericUtils.isInteger(e))
          throw new Error("minLength and maxLength must be positive numbers");
        if (e < t)
          throw new Error("Provided maxLength must be higher or equal than minLength");
        if (!ArrayUtils_1.ArrayUtils.isArray(n) || n.length <= 0)
          throw new Error("invalid charset");
        for (var i = "", l = 0, o = n; l < o.length; l++) {
          var s = o[l];
          if (!r.isString(s) || r.isEmpty(s))
            throw new Error("invalid charset");
          var a = s.substr(0, 1), u = s.substr(2, 1);
          3 === s.length && 1 === s.indexOf("-") && "\\" !== a ? "0123456789".indexOf(a) >= 0 ? i += "0123456789".substring("0123456789".indexOf(a), "0123456789".indexOf(u) + 1) : "abcdefghijkmnopqrstuvwxyz".indexOf(a) >= 0 ? i += "abcdefghijkmnopqrstuvwxyz".substring("abcdefghijkmnopqrstuvwxyz".indexOf(a), "abcdefghijkmnopqrstuvwxyz".indexOf(u) + 1) : "ABCDEFGHIJKMNOPQRSTUVWXYZ".indexOf(a) >= 0 && (i += "ABCDEFGHIJKMNOPQRSTUVWXYZ".substring("ABCDEFGHIJKMNOPQRSTUVWXYZ".indexOf(a), "ABCDEFGHIJKMNOPQRSTUVWXYZ".indexOf(u) + 1)) : i += r.replace(s, "\\-", "-");
        }
        for (var f = "", g = t === e ? e : NumericUtils_1.NumericUtils.generateRandomInteger(t, e), h = 0; h < g; h++)
          f += i.charAt(Math.floor(Math.random() * i.length));
        return f;
      }, r.findMostSimilarString = function() {
      }, r.findMostSimilarStringIndex = function() {
      }, r.removeNewLineCharacters = function() {
      }, r.removeAccents = function(t) {
        if (!r.isString(t))
          throw new Error("value is not a string");
        for (var e = [{ b: "A", l: "AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ" }, { b: "AA", l: "Ꜳ" }, { b: "AE", l: "ÆǼǢ" }, { b: "AO", l: "Ꜵ" }, { b: "AU", l: "Ꜷ" }, { b: "AV", l: "ꜸꜺ" }, { b: "AY", l: "Ꜽ" }, { b: "B", l: "BⒷＢḂḄḆɃƂƁ" }, { b: "C", l: "CⒸＣĆĈĊČÇḈƇȻꜾ" }, { b: "D", l: "DⒹＤḊĎḌḐḒḎĐƋƊƉꝹ" }, { b: "DZ", l: "ǱǄ" }, { b: "Dz", l: "ǲǅ" }, { b: "E", l: "EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ" }, { b: "F", l: "FⒻＦḞƑꝻ" }, { b: "G", l: "GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ" }, { b: "H", l: "HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ" }, { b: "I", l: "IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ" }, { b: "J", l: "JⒿＪĴɈ" }, { b: "K", l: "KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ" }, { b: "L", l: "LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ" }, { b: "LJ", l: "Ǉ" }, { b: "Lj", l: "ǈ" }, { b: "M", l: "MⓂＭḾṀṂⱮƜ" }, { b: "N", l: "NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ" }, { b: "NJ", l: "Ǌ" }, { b: "Nj", l: "ǋ" }, { b: "O", l: "OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ" }, { b: "OI", l: "Ƣ" }, { b: "OO", l: "Ꝏ" }, { b: "OU", l: "Ȣ" }, { b: "OE", l: "Œ" }, { b: "oe", l: "œ" }, { b: "P", l: "PⓅＰṔṖƤⱣꝐꝒꝔ" }, { b: "Q", l: "QⓆＱꝖꝘɊ" }, { b: "R", l: "RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ" }, { b: "S", l: "SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ" }, { b: "T", l: "TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ" }, { b: "TZ", l: "Ꜩ" }, { b: "U", l: "UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ" }, { b: "V", l: "VⓋＶṼṾƲꝞɅ" }, { b: "VY", l: "Ꝡ" }, { b: "W", l: "WⓌＷẀẂŴẆẄẈⱲ" }, { b: "X", l: "XⓍＸẊẌ" }, { b: "Y", l: "YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ" }, { b: "Z", l: "ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ" }, { b: "a", l: "aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ" }, { b: "aa", l: "ꜳ" }, { b: "ae", l: "æǽǣ" }, { b: "ao", l: "ꜵ" }, { b: "au", l: "ꜷ" }, { b: "av", l: "ꜹꜻ" }, { b: "ay", l: "ꜽ" }, { b: "b", l: "bⓑｂḃḅḇƀƃɓ" }, { b: "c", l: "cⓒｃćĉċčçḉƈȼꜿↄ" }, { b: "d", l: "dⓓｄḋďḍḑḓḏđƌɖɗꝺ" }, { b: "dz", l: "ǳǆ" }, { b: "e", l: "eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ" }, { b: "f", l: "fⓕｆḟƒꝼ" }, { b: "g", l: "gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ" }, { b: "h", l: "hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ" }, { b: "hv", l: "ƕ" }, { b: "i", l: "iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı" }, { b: "j", l: "jⓙｊĵǰɉ" }, { b: "k", l: "kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ" }, { b: "l", l: "lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ" }, { b: "lj", l: "ǉ" }, { b: "m", l: "mⓜｍḿṁṃɱɯ" }, { b: "n", l: "nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ" }, { b: "nj", l: "ǌ" }, { b: "o", l: "oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ" }, { b: "oi", l: "ƣ" }, { b: "ou", l: "ȣ" }, { b: "oo", l: "ꝏ" }, { b: "p", l: "pⓟｐṕṗƥᵽꝑꝓꝕ" }, { b: "q", l: "qⓠｑɋꝗꝙ" }, { b: "r", l: "rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ" }, { b: "s", l: "sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ" }, { b: "t", l: "tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ" }, { b: "tz", l: "ꜩ" }, { b: "u", l: "uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ" }, { b: "v", l: "vⓥｖṽṿʋꝟʌ" }, { b: "vy", l: "ꝡ" }, { b: "w", l: "wⓦｗẁẃŵẇẅẘẉⱳ" }, { b: "x", l: "xⓧｘẋẍ" }, { b: "y", l: "yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ" }, { b: "z", l: "zⓩｚźẑżžẓẕƶȥɀⱬꝣ" }], n = {}, i = 0; i < e.length; i++)
          for (var l = e[i].l, o = 0; o < l.length; o++)
            n[l[o]] = e[i].b;
        return t.replace(/[^\u0000-\u007E]/g, function(r2) {
          return n[r2] || r2;
        });
      }, r.removeWordsShorterThan = function() {
      }, r.removeWordsLongerThan = function() {
      }, r.removeUrls = function() {
      }, r.removeHtmlCode = function() {
      }, r.removeSameConsecutive = function() {
      }, r.FORMAT_SENTENCE_CASE = "FORMAT_SENTENCE_CASE", r.FORMAT_START_CASE = "FORMAT_START_CASE", r.FORMAT_ALL_UPPER_CASE = "FORMAT_ALL_UPPER_CASE", r.FORMAT_ALL_LOWER_CASE = "FORMAT_ALL_LOWER_CASE", r.FORMAT_FIRST_UPPER_REST_LOWER = "FORMAT_FIRST_UPPER_REST_LOWER", r.FORMAT_CAMEL_CASE = "FORMAT_CAMEL_CASE", r.FORMAT_UPPER_CAMEL_CASE = "FORMAT_UPPER_CAMEL_CASE", r.FORMAT_LOWER_CAMEL_CASE = "FORMAT_LOWER_CAMEL_CASE", r.FORMAT_SNAKE_CASE = "FORMAT_SNAKE_CASE", r.FORMAT_UPPER_SNAKE_CASE = "FORMAT_UPPER_SNAKE_CASE", r.FORMAT_LOWER_SNAKE_CASE = "FORMAT_LOWER_SNAKE_CASE", r;
    }();
    exports.StringUtils = StringUtils;
  }
});

// node_modules/turbocommons-ts/managers/BrowserManager.js
var require_BrowserManager = __commonJS({
  "node_modules/turbocommons-ts/managers/BrowserManager.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringUtils_1 = require_StringUtils();
    var NumericUtils_1 = require_NumericUtils();
    var ArrayUtils_1 = require_ArrayUtils();
    var BrowserManager = function() {
      function t() {
      }
      return t.prototype.getCurrentUrl = function() {
        return window.location.href;
      }, t.prototype.isDocumentLoaded = function() {
        return "complete" === document.readyState;
      }, t.prototype.isCookie = function(t2) {
        return void 0 !== this.getCookie(t2);
      }, t.prototype.setCookie = function(t2, e, o, n, i, r) {
        if (void 0 === o && (o = ""), void 0 === n && (n = "/"), void 0 === i && (i = ""), void 0 === r && (r = false), !StringUtils_1.StringUtils.isString(t2) || StringUtils_1.StringUtils.isEmpty(t2))
          throw new Error("key must be defined");
        if (void 0 !== e && null !== e || (e = ""), !StringUtils_1.StringUtils.isString(e))
          throw new Error("value must be a string");
        if (NumericUtils_1.NumericUtils.isNumeric(o)) {
          var a = o;
          (o = /* @__PURE__ */ new Date()).setDate(o.getDate() + a);
        }
        var d = encodeURIComponent(t2) + "=" + encodeURIComponent(e);
        return d += o ? "; expires=" + o.toUTCString() : "", d += n ? "; path=" + n : "", d += i ? "; domain=" + i : "", d += r ? "; secure" : "", document.cookie = d, true;
      }, t.prototype.getCookie = function(t2) {
        if (!StringUtils_1.StringUtils.isString(t2) || StringUtils_1.StringUtils.isEmpty(t2))
          throw new Error("key must be defined");
        for (var e = document.cookie.split("; "), o = /\+/g, n = 0, i = e.length; n < i; n++) {
          var r = e[n].split("="), a = r.shift() || "";
          if (decodeURIComponent(a.replace(o, " ")) === t2)
            return decodeURIComponent(r.join("=").replace(o, " "));
        }
      }, t.prototype.deleteCookie = function(t2, e) {
        if (void 0 === e && (e = "/"), !StringUtils_1.StringUtils.isString(t2) || StringUtils_1.StringUtils.isEmpty(t2))
          throw new Error("key must be defined");
        return void 0 !== this.getCookie(t2) && (this.setCookie(t2, "", -1, e), true);
      }, t.prototype.reload = function() {
        location.reload();
      }, t.prototype.getPreferredLanguage = function() {
        var t2 = "";
        if (ArrayUtils_1.ArrayUtils.isArray(window.navigator.languages)) {
          for (var e = 0; e < window.navigator.languages.length; e++)
            if (window.navigator.languages[e].length >= 2) {
              t2 = window.navigator.languages[e];
              break;
            }
        } else
          t2 = (t2 = window.navigator.userLanguage || window.navigator.language).split(",")[0];
        return t2.trim().substr(0, 2).toLowerCase();
      }, t.prototype.goToUrl = function(t2, e, o) {
        if (void 0 === e && (e = false), void 0 === o && (o = null), null == o)
          e ? window.open(t2, "_blank") : window.location.href = t2;
        else {
          var n = document.createElement("form");
          n.action = t2, n.method = "POST", n.style.display = "none", e && (n.target = "_blank");
          for (var i = Object.getOwnPropertyNames(o), r = 0; r < i.length; r++) {
            var a = document.createElement("input");
            a.type = "hidden", a.name = i[r], a.value = o[i[r]], n.appendChild(a);
          }
          document.body.appendChild(n), n.submit(), e && document.body.removeChild(n);
        }
      }, t.prototype.disableBackButton = function() {
        history.pushState(null, "", document.URL), window.addEventListener("popstate", this._onPopStatePreventBackButton);
      }, t.prototype._onPopStatePreventBackButton = function() {
        history.pushState(null, "", document.URL);
      }, t.prototype.enableBackButton = function() {
        window.removeEventListener("popstate", this._onPopStatePreventBackButton);
      }, t.prototype.disableScroll = function() {
      }, t.prototype.enableScroll = function() {
      }, t.prototype.getScrollPosition = function() {
        return [window.pageXOffset, window.pageYOffset];
      }, t.prototype.getWindowWidth = function() {
        return window.innerWidth || document.documentElement.clientWidth || document.getElementsByTagName("body")[0].clientWidth || -1;
      }, t.prototype.getWindowHeight = function() {
        return window.innerHeight || document.documentElement.clientHeight || document.getElementsByTagName("body")[0].clientHeight || -1;
      }, t.prototype.getDocumentWidth = function() {
        return Math.max(document.body.scrollWidth, document.body.offsetWidth, document.documentElement.clientWidth, document.documentElement.scrollWidth, document.documentElement.offsetWidth);
      }, t.prototype.getDocumentHeight = function() {
        return Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);
      }, t.prototype.scrollTo = function(t2, e, o) {
        void 0 === e && (e = 600), void 0 === o && (o = null);
        var n = function(t3) {
          return --t3 * t3 * t3 + 1;
        }, i = window.pageXOffset, r = window.pageYOffset, a = "now" in window.performance ? performance.now() : (/* @__PURE__ */ new Date()).getTime(), d = this.getDocumentWidth(), l = this.getDocumentHeight(), u = this.getWindowWidth(), s = this.getWindowHeight(), c = ArrayUtils_1.ArrayUtils.isArray(t2) ? t2[0] : t2.offsetLeft, g = ArrayUtils_1.ArrayUtils.isArray(t2) ? t2[1] : t2.offsetTop, m = i, p = r;
        if (d > u && (m = Math.round(d - c < u ? d - u : c)), l > s && (p = Math.round(l - g < s ? l - s : g)), "requestAnimationFrame" in window == false)
          return window.scroll(m, p), void (o && o());
        !function t3() {
          var d2 = "now" in window.performance ? performance.now() : (/* @__PURE__ */ new Date()).getTime(), l2 = Math.min(1, (d2 - a) / e), u2 = Math.ceil(n(l2) * (m - i) + i), s2 = Math.ceil(n(l2) * (p - r) + r);
          window.scroll(u2, s2), Math.ceil(window.pageXOffset) !== m || Math.ceil(window.pageYOffset) !== p ? requestAnimationFrame(t3) : null !== o && o();
        }();
      }, t;
    }();
    exports.BrowserManager = BrowserManager;
  }
});

// node_modules/turbocommons-ts/model/HashMapObject.js
var require_HashMapObject = __commonJS({
  "node_modules/turbocommons-ts/model/HashMapObject.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringUtils_1 = require_StringUtils();
    var ObjectUtils_1 = require_ObjectUtils();
    var ArrayUtils_1 = require_ArrayUtils();
    var NumericUtils_1 = require_NumericUtils();
    var HashMapObject = function() {
      function t(t2) {
        if (void 0 === t2 && (t2 = null), this._keys = [], this._data = {}, this._length = 0, null != t2)
          if (ObjectUtils_1.ObjectUtils.isObject(t2))
            for (var e in t2)
              this.set(String(e), t2[e]);
          else {
            if (!ArrayUtils_1.ArrayUtils.isArray(t2))
              throw new Error("HashMapObject: invalid data");
            for (var s = t2.length, i = 0; i < s; i++)
              this.set(String(i), t2[i]);
          }
      }
      return t.prototype.set = function(t2, e) {
        if (StringUtils_1.StringUtils.isString(t2) && "" !== t2.replace(/ |\n|\r|\t/gi, ""))
          return this._data.hasOwnProperty(t2) || (this._keys.push(t2), this._length++), this._data[t2] = e;
        throw new Error("HashMapObject: key must be a non empty string");
      }, t.prototype.length = function() {
        return this._length;
      }, t.prototype.get = function(t2) {
        if (this._data.hasOwnProperty(t2))
          return this._data[t2];
        throw new Error("HashMapObject->get: key does not exist or is invalid");
      }, t.prototype.getAt = function(t2) {
        if ("number" == typeof t2 && NumericUtils_1.NumericUtils.isInteger(t2) && t2 >= 0 && t2 < this._length)
          return this._data[this._keys[t2]];
        throw new Error("HashMapObject->getAt: index does not exist or is invalid");
      }, t.prototype.getKeys = function() {
        return this._keys;
      }, t.prototype.getValues = function() {
        for (var t2 = [], e = 0; e < this._keys.length; e++)
          t2.push(this.get(this._keys[e]));
        return t2;
      }, t.prototype.isKey = function(t2) {
        return StringUtils_1.StringUtils.isString(t2) && this._data.hasOwnProperty(t2);
      }, t.prototype.remove = function(t2) {
        if (this._data.hasOwnProperty(t2)) {
          var e = this._data[t2];
          return delete this._data[t2], delete this._keys[this._keys.indexOf(t2)], this._length--, e;
        }
        throw this._validateKeyFormat(t2), new Error("HashMapObject->rename: key does not exist " + t2);
      }, t.prototype.rename = function(t2, e) {
        if (this._validateKeyFormat(t2), this._validateKeyFormat(e), this.isKey(e))
          throw new Error("HashMapObject->rename: newKey " + e + " already exists");
        if (this.isKey(t2)) {
          for (var s = {}, i = 0; i < this._keys.length; i++)
            this._keys[i] == t2 ? s[e] = this._data[t2] : s[this._keys[i]] = this._data[this._keys[i]];
          return this._data = s, this._keys[this._keys.indexOf(t2)] = e, true;
        }
        throw new Error("HashMapObject->rename: key does not exist " + t2);
      }, t.prototype.swap = function(t2, e) {
        if (this._validateKeyFormat(t2), this._validateKeyFormat(e), !this.isKey(t2))
          throw new Error("HashMapObject->swap: key1 does not exist " + t2);
        if (!this.isKey(e))
          throw new Error("HashMapObject->swap: key2 does not exist " + e);
        for (var s = {}, i = this.get(t2), r = this.get(e), a = 0; a < this._keys.length; a++)
          switch (this._keys[a]) {
            case t2:
              s[e] = r;
              break;
            case e:
              s[t2] = i;
              break;
            default:
              s[this._keys[a]] = this._data[this._keys[a]];
          }
        this._data = s;
        var n = this._keys.indexOf(t2), h = this._keys.indexOf(e);
        return this._keys[n] = e, this._keys[h] = t2, true;
      }, t.prototype.sortByKey = function(e, s) {
        switch (void 0 === e && (e = t.SORT_METHOD_STRING), void 0 === s && (s = t.SORT_ORDER_ASCENDING), e + s) {
          case t.SORT_METHOD_STRING + t.SORT_ORDER_ASCENDING:
            this._keys.sort();
            break;
          case t.SORT_METHOD_STRING + t.SORT_ORDER_DESCENDING:
            this._keys.sort(), this._keys.reverse();
            break;
          case t.SORT_METHOD_NUMERIC + t.SORT_ORDER_ASCENDING:
            this._keys.sort(function(t2, e2) {
              return t2 - e2;
            });
            break;
          case t.SORT_METHOD_NUMERIC + t.SORT_ORDER_DESCENDING:
            this._keys.sort(function(t2, e2) {
              return e2 - t2;
            });
            break;
          default:
            throw new Error("HashMapObject->sortByKey: Unknown sort method or order");
        }
        return true;
      }, t.prototype.shift = function() {
        if (this._length <= 0)
          throw new Error("HashMapObject->shift: No elements");
        this._length--;
        var t2 = this._data[this._keys[0]];
        return delete this._data[this._keys[0]], this._keys.shift(), t2;
      }, t.prototype.pop = function() {
        if (this._length <= 0)
          throw new Error("HashMapObject->pop: No elements");
        this._length--;
        var t2 = this._data[this._keys[this._length]];
        return delete this._data[this._keys[this._length]], this._keys.pop(), t2;
      }, t.prototype.reverse = function() {
        return this._keys.reverse(), true;
      }, t.prototype._validateKeyFormat = function(t2) {
        if (!StringUtils_1.StringUtils.isString(t2) || "" == t2.replace(/ |\n|\r|\t/gi, ""))
          throw new Error("HashMapObject: key must be a non empty string");
      }, t.SORT_METHOD_STRING = "SORT_METHOD_STRING", t.SORT_METHOD_NUMERIC = "SORT_METHOD_NUMERIC", t.SORT_ORDER_ASCENDING = "SORT_ORDER_ASCENDING", t.SORT_ORDER_DESCENDING = "SORT_ORDER_DESCENDING", t;
    }();
    exports.HashMapObject = HashMapObject;
  }
});

// node_modules/turbocommons-ts/managers/httpmanager/HTTPManagerBaseRequest.js
var require_HTTPManagerBaseRequest = __commonJS({
  "node_modules/turbocommons-ts/managers/httpmanager/HTTPManagerBaseRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var HTTPManagerBaseRequest = function() {
      function t(e, s, a) {
        void 0 === s && (s = "STRING"), void 0 === a && (a = 0), this.resultFormat = t.STRING, this.ignoreGlobalPostParams = false, this.successCallback = function() {
        }, this.errorCallback = function() {
        }, this.finallyCallback = function() {
        }, this.url = e, this.resultFormat = s, this.timeout = a;
      }
      return t.STRING = "STRING", t.JSON = "JSON", t;
    }();
    exports.HTTPManagerBaseRequest = HTTPManagerBaseRequest;
  }
});

// node_modules/turbocommons-ts/managers/httpmanager/HTTPManagerGetRequest.js
var require_HTTPManagerGetRequest = __commonJS({
  "node_modules/turbocommons-ts/managers/httpmanager/HTTPManagerGetRequest.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var e = function(t, r) {
        return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e2, t2) {
          e2.__proto__ = t2;
        } || function(e2, t2) {
          for (var r2 in t2)
            t2.hasOwnProperty(r2) && (e2[r2] = t2[r2]);
        })(t, r);
      };
      return function(t, r) {
        function n() {
          this.constructor = t;
        }
        e(t, r), t.prototype = null === r ? Object.create(r) : (n.prototype = r.prototype, new n());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    var HTTPManagerBaseRequest_1 = require_HTTPManagerBaseRequest();
    var HTTPManagerGetRequest = function(e) {
      function t() {
        var t2 = null !== e && e.apply(this, arguments) || this;
        return t2.parameters = {}, t2;
      }
      return __extends(t, e), t;
    }(HTTPManagerBaseRequest_1.HTTPManagerBaseRequest);
    exports.HTTPManagerGetRequest = HTTPManagerGetRequest;
  }
});

// node_modules/turbocommons-ts/managers/HTTPManager.js
var require_HTTPManager = __commonJS({
  "node_modules/turbocommons-ts/managers/HTTPManager.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringUtils_1 = require_StringUtils();
    var ObjectUtils_1 = require_ObjectUtils();
    var ArrayUtils_1 = require_ArrayUtils();
    var HashMapObject_1 = require_HashMapObject();
    var HTTPManagerGetRequest_1 = require_HTTPManagerGetRequest();
    var HTTPManagerBaseRequest_1 = require_HTTPManagerBaseRequest();
    var HTTPManager = function() {
      function t(t2) {
        if (void 0 === t2 && (t2 = true), this.baseUrl = "", this.asynchronous = true, this.timeout = 0, this.isOnlyHttps = true, this.internetCheckLocations = ["https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js", "https://ajax.aspnetcdn.com/ajax/modernizr/modernizr-2.8.3.js", "https://code.jquery.com/jquery-3.2.1.slim.min.js"], this._queues = [], this._globalPostParams = {}, "boolean" != typeof t2)
          throw new Error("asynchronous is not boolean");
        this.asynchronous = t2;
      }
      return t.prototype.setGlobalPostParam = function(t2, e) {
        if (StringUtils_1.StringUtils.isEmpty(t2) || StringUtils_1.StringUtils.isEmpty(e))
          throw new Error("parameterName and value must be non empty strings");
        this._globalPostParams[t2] = e;
      }, t.prototype.isGlobalPostParam = function(t2) {
        if (StringUtils_1.StringUtils.isEmpty(t2))
          throw new Error("parameterName must be a non empty string");
        return Object.keys(this._globalPostParams).indexOf(t2) >= 0;
      }, t.prototype.getGlobalPostParam = function(t2) {
        if (!this.isGlobalPostParam(t2))
          throw new Error("parameterName does not exist: " + t2);
        return this._globalPostParams[t2];
      }, t.prototype.deleteGlobalPostParam = function(t2) {
        "" !== this.getGlobalPostParam(t2) && delete this._globalPostParams[t2];
      }, t.prototype.createQueue = function(t2) {
        if (StringUtils_1.StringUtils.isEmpty(t2))
          throw new Error("name must be a non empty string");
        for (var e = 0, r = this._queues; e < r.length; e++) {
          if (r[e].name === t2)
            throw new Error("queue " + t2 + " already exists");
        }
        this._queues.push({ name: t2, isRunning: false, pendingRequests: [] });
      }, t.prototype.countQueues = function() {
        return this._queues.length;
      }, t.prototype.isQueueRunning = function(t2) {
        if (StringUtils_1.StringUtils.isEmpty(t2))
          throw new Error("name must be a non empty string");
        for (var e = 0, r = this._queues; e < r.length; e++) {
          var n = r[e];
          if (n.name === t2)
            return n.isRunning;
        }
        throw new Error("queue " + t2 + " does not exist");
      }, t.prototype.deleteQueue = function(t2) {
        if (StringUtils_1.StringUtils.isEmpty(t2))
          throw new Error("name must be a non empty string");
        for (var e = 0; e < this._queues.length; e++)
          if (this._queues[e].name === t2) {
            if (this._queues[e].isRunning)
              throw new Error("queue " + t2 + " is currently running");
            return void this._queues.splice(e, 1);
          }
        throw new Error("queue " + t2 + " does not exist");
      }, t.prototype.generateUrlQueryString = function(t2) {
        var e = "", r = [], n = [];
        if (ObjectUtils_1.ObjectUtils.isObject(t2) && ObjectUtils_1.ObjectUtils.getKeys(t2).length > 0) {
          if (t2 instanceof HashMapObject_1.HashMapObject)
            r = t2.getKeys(), n = t2.getValues();
          else {
            r = Object.getOwnPropertyNames(t2);
            for (var s = 0; s < r.length; s++)
              n.push(t2[r[s]]);
          }
          for (s = 0; s < r.length; s++)
            e += "&" + encodeURIComponent(r[s]) + "=" + encodeURIComponent(StringUtils_1.StringUtils.isString(n[s]) ? n[s] : JSON.stringify(n[s]));
          return e.substring(1, e.length);
        }
        throw new Error("keyValuePairs must be a HashMapObject or a non empty Object");
      }, t.prototype.isInternetAvailable = function(t2, e) {
        var r = this;
        if ("function" != typeof t2 || "function" != typeof e)
          throw new Error("params must be functions");
        if (this.internetCheckLocations.length <= 0)
          throw new Error("no check locations specified");
        var n = function(s) {
          if (s.length <= 0)
            return e();
          var i = s.shift();
          if (!StringUtils_1.StringUtils.isUrl(i))
            throw new Error("invalid check url : " + i);
          r.urlExists(String(i + "?r=" + StringUtils_1.StringUtils.generateRandom(15, 15)), t2, function() {
            return n(s);
          });
        };
        false === navigator.onLine ? e() : n(this.internetCheckLocations.slice(0));
      }, t.prototype.urlExists = function(t2, e, r) {
        if (!StringUtils_1.StringUtils.isString(t2))
          throw new Error("url must be a string");
        if ("function" != typeof e || "function" != typeof r)
          throw new Error("params must be functions");
        var n = this._composeUrl(this.baseUrl, t2);
        if (StringUtils_1.StringUtils.isUrl(n)) {
          var s = new HTTPManagerGetRequest_1.HTTPManagerGetRequest(n);
          s.successCallback = function() {
            return e();
          }, s.errorCallback = function() {
            return r();
          }, this.execute(s);
        } else
          r();
      }, t.prototype.getUrlHeaders = function(e, r, n) {
        var s = this, i = this._composeUrl(this.baseUrl, e);
        if (!StringUtils_1.StringUtils.isString(i))
          throw new Error("url must be a string");
        if ("function" != typeof r || "function" != typeof n)
          throw new Error("params must be functions");
        if (!StringUtils_1.StringUtils.isUrl(i))
          throw new Error("invalid url " + i);
        var o = new XMLHttpRequest();
        this.timeout > 0 && (o.timeout = this.timeout), o.open("GET", i, this.asynchronous), o.onload = function() {
          return r(o.getAllResponseHeaders().split("\n"));
        }, o.onerror = function() {
          return n(o.statusText, o.status);
        }, o.ontimeout = function() {
          return n(s.timeout + t.ERROR_TIMEOUT, 408);
        }, this._executeXmlHttprequestSend(o, i);
      }, t.prototype.execute = function(e, r, n) {
        var s = this;
        void 0 === r && (r = null), void 0 === n && (n = null);
        var i = this._generateValidRequestsList(e);
        if (null !== r && !(r instanceof Function) || null !== n && !(n instanceof Function))
          throw new Error("finishedCallback and progressCallback must be functions");
        for (var o = 0, a = false, u = [], l = function(t2, e2, l2, g2, p2) {
          var c2 = t2.request, h = s._composeUrl(s.baseUrl, c2.url), f = e2;
          if (c2.resultFormat === HTTPManagerBaseRequest_1.HTTPManagerBaseRequest.JSON)
            try {
              f = JSON.parse(e2);
            } catch (t3) {
              l2 || (l2 = true, g2 = "Could not parse request result as a json string");
            }
          o++, u[t2.index] = { url: h, response: f, isError: l2, errorMsg: g2, code: p2 }, l2 ? (a = true, c2.errorCallback(g2, p2, e2)) : c2.successCallback(f), c2.finallyCallback(), null !== n && n(h, i.length), o >= i.length && null !== r && r(u, a);
        }, g = function(e2) {
          var r2, n2 = { index: e2, request: i[e2] };
          if (!StringUtils_1.StringUtils.isString(i[e2].url) || StringUtils_1.StringUtils.isEmpty(i[e2].url))
            throw new Error("url " + e2 + " must be a non empty string");
          try {
            r2 = new XMLHttpRequest();
          } catch (t2) {
            throw new Error("Could not initialize XMLHttpRequest. If running node, it is not natively available. We recommend npm xhr2 library that emulates XMLHttpRequest on node apps (global.XMLHttpRequest = require('xhr2'))");
          }
          (i[e2].timeout > 0 || p.timeout > 0) && (r2.timeout = i[e2].timeout > 0 ? i[e2].timeout : p.timeout);
          var o2 = p._composeUrl(p.baseUrl, i[e2].url), a2 = i[e2] instanceof HTTPManagerGetRequest_1.HTTPManagerGetRequest ? "GET" : "POST";
          if (r2.open(a2, o2, p.asynchronous), r2.onload = function() {
            r2.status >= 200 && r2.status < 400 ? l(n2, r2.responseText, false, "", r2.status) : l(n2, r2.responseText, true, r2.statusText, r2.status);
          }, r2.onerror = function() {
            l(n2, r2.responseText, true, r2.statusText, r2.status);
          }, r2.ontimeout = function() {
            l(n2, r2.responseText, true, s.timeout + t.ERROR_TIMEOUT, 408);
          }, "GET" === a2 && p._executeXmlHttprequestSend(r2, o2), "POST" === a2 || Object.keys(p._globalPostParams).length > 0)
            try {
              var u2 = "POST" === a2 ? i[e2].parameters : {};
              if (false === i[e2].ignoreGlobalPostParams)
                for (var g2 = 0, c2 = Object.keys(p._globalPostParams); g2 < c2.length; g2++) {
                  var h = c2[g2];
                  u2 instanceof HashMapObject_1.HashMapObject ? u2.set(h, p._globalPostParams[h]) : u2[h] = p._globalPostParams[h];
                }
              r2.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), r2.send(p.generateUrlQueryString(u2));
            } catch (t2) {
              p._executeXmlHttprequestSend(r2, o2);
            }
        }, p = this, c = 0; c < i.length; c++)
          g(c);
      }, t.prototype._executeXmlHttprequestSend = function(t2, e) {
        try {
          t2.send();
        } catch (t3) {
          throw new Error("HTTPManager could not execute request to " + e + "\n" + t3.toString());
        }
      }, t.prototype._generateValidRequestsList = function(t2) {
        var e = [];
        if (ArrayUtils_1.ArrayUtils.isArray(t2)) {
          if (t2.length <= 0)
            throw new Error("No requests to execute");
          for (var r = 0, n = t2; r < n.length; r++) {
            var s = n[r];
            StringUtils_1.StringUtils.isString(s) ? e.push(new HTTPManagerGetRequest_1.HTTPManagerGetRequest(s)) : e.push(s);
          }
        } else if (StringUtils_1.StringUtils.isString(t2) && !StringUtils_1.StringUtils.isEmpty(t2))
          e = [new HTTPManagerGetRequest_1.HTTPManagerGetRequest(t2)];
        else {
          if (!(t2 instanceof HTTPManagerBaseRequest_1.HTTPManagerBaseRequest))
            throw new Error("Invalid requests value");
          e = [t2];
        }
        return e;
      }, t.prototype.queue = function(t2, e, r) {
        void 0 === r && (r = null);
        var n = this._generateValidRequestsList(t2);
        if (null !== r && !(r instanceof Function))
          throw new Error("finishedCallback and progressCallback must be functions");
        for (var s = 0, i = this._queues; s < i.length; s++) {
          var o = i[s];
          if (o.name === e) {
            for (var a = 0; a < n.length; a++)
              o.pendingRequests.unshift(n[a]);
            if (null !== r) {
              var u = new HTTPManagerGetRequest_1.HTTPManagerGetRequest("FINISHED_REQUEST_CALLBACK");
              u.finallyCallback = r, o.pendingRequests.unshift(u);
            }
            return void (this.isQueueRunning(e) || this._startQueue(e));
          }
        }
        throw new Error("queue " + e + " does not exist. Create it with createQueue()");
      }, t.prototype._startQueue = function(t2) {
        for (var e = this, r = function(t3) {
          if (t3.pendingRequests.length <= 0)
            t3.isRunning = false;
          else {
            if ("FINISHED_REQUEST_CALLBACK" === t3.pendingRequests[t3.pendingRequests.length - 1].url) {
              var n2 = t3.pendingRequests.pop();
              t3.pendingRequests.length <= 0 && (t3.isRunning = false), n2.finallyCallback();
            }
            t3.pendingRequests.length > 0 && (t3.isRunning = true, e.execute(t3.pendingRequests.pop(), function() {
              return r(t3);
            }));
          }
        }, n = 0, s = this._queues; n < s.length; n++) {
          var i = s[n];
          if (i.name === t2)
            return void r(i);
        }
      }, t.prototype.loadResourcesFromList = function(t2, e, r, n, s) {
        var i = this;
        if (void 0 === s && (s = null), !StringUtils_1.StringUtils.isString(t2) || StringUtils_1.StringUtils.isEmpty(t2))
          throw new Error("urlToListOfResources must be a non empty string");
        if (!StringUtils_1.StringUtils.isString(e) || StringUtils_1.StringUtils.isEmpty(e))
          throw new Error("baseUrl must be a non empty string");
        this.execute(t2, function(o, a) {
          if (o[0].isError)
            return n(t2, o[0].errorMsg, o[0].code);
          for (var u = [], l = StringUtils_1.StringUtils.getLines(o[0].response), g = 0, p = l; g < p.length; g++) {
            var c = p[g];
            u.push(StringUtils_1.StringUtils.formatPath(i._composeUrl(e, c), "/"));
          }
          i.execute(u, function(t3, e2) {
            for (var s2 = [], i2 = 0, o2 = t3; i2 < o2.length; i2++) {
              var a2 = o2[i2];
              if (a2.isError)
                return n(a2.url, a2.errorMsg, a2.code);
              s2.push(a2.response);
            }
            r(l, s2);
          }, s);
        });
      }, t.prototype._composeUrl = function(t2, e) {
        var r = "";
        if (r = StringUtils_1.StringUtils.isEmpty(t2) || "http:" === e.substr(0, 5) || "https:" === e.substr(0, 6) ? e : StringUtils_1.StringUtils.replace(StringUtils_1.StringUtils.formatPath(t2 + "/" + e, "/"), ["http:/", "https:/"], ["http://", "https://"], 1), this.isOnlyHttps && "http:" === r.substr(0, 5).toLowerCase())
          throw new Error("Non secure http requests are forbidden. Set isOnlyHttps=false to allow " + r);
        return r;
      }, t.ERROR_TIMEOUT = " ms Timeout reached", t;
    }();
    exports.HTTPManager = HTTPManager;
  }
});

// node_modules/turbocommons-ts/managers/httpmanager/HTTPManagerPostRequest.js
var require_HTTPManagerPostRequest = __commonJS({
  "node_modules/turbocommons-ts/managers/httpmanager/HTTPManagerPostRequest.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var e = function(t, r) {
        return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e2, t2) {
          e2.__proto__ = t2;
        } || function(e2, t2) {
          for (var r2 in t2)
            t2.hasOwnProperty(r2) && (e2[r2] = t2[r2]);
        })(t, r);
      };
      return function(t, r) {
        function n() {
          this.constructor = t;
        }
        e(t, r), t.prototype = null === r ? Object.create(r) : (n.prototype = r.prototype, new n());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    var HTTPManagerBaseRequest_1 = require_HTTPManagerBaseRequest();
    var HTTPManagerPostRequest = function(e) {
      function t() {
        var t2 = null !== e && e.apply(this, arguments) || this;
        return t2.parameters = {}, t2;
      }
      return __extends(t, e), t;
    }(HTTPManagerBaseRequest_1.HTTPManagerBaseRequest);
    exports.HTTPManagerPostRequest = HTTPManagerPostRequest;
  }
});

// node_modules/turbocommons-ts/utils/EncodingUtils.js
var require_EncodingUtils = __commonJS({
  "node_modules/turbocommons-ts/utils/EncodingUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringUtils_1 = require_StringUtils();
    var EncodingUtils = function() {
      function t() {
      }
      return t.unicodeEscapedCharsToUtf8 = function(t2) {
        if (StringUtils_1.StringUtils.isString(t2))
          return t2.replace(/\\u([\d\w]{4})/gi, function(t3, i) {
            return String.fromCharCode(parseInt(i, 16));
          });
        throw new Error("Specified value must be a string");
      }, t.utf8ToUnicodeEscapedChars = function(t2) {
        if (!StringUtils_1.StringUtils.isString(t2))
          throw new Error("Specified value must be a string");
        return StringUtils_1.StringUtils.isEmpty(t2) ? t2 : t2.replace(/[^\0-~]/g, function(t3) {
          return "\\u" + ("0000" + t3.charCodeAt(0).toString(16)).slice(-4);
        });
      }, t;
    }();
    exports.EncodingUtils = EncodingUtils;
  }
});

// node_modules/turbocommons-ts/model/JavaPropertiesObject.js
var require_JavaPropertiesObject = __commonJS({
  "node_modules/turbocommons-ts/model/JavaPropertiesObject.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var t = function(r, i) {
        return (t = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t2, r2) {
          t2.__proto__ = r2;
        } || function(t2, r2) {
          for (var i2 in r2)
            r2.hasOwnProperty(i2) && (t2[i2] = r2[i2]);
        })(r, i);
      };
      return function(r, i) {
        function n() {
          this.constructor = r;
        }
        t(r, i), r.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    var HashMapObject_1 = require_HashMapObject();
    var StringUtils_1 = require_StringUtils();
    var ArrayUtils_1 = require_ArrayUtils();
    var ValidationManager_1 = require_ValidationManager();
    var EncodingUtils_1 = require_EncodingUtils();
    var JavaPropertiesObject = function(t) {
      function r(r2) {
        void 0 === r2 && (r2 = "");
        var i = t.call(this) || this;
        if (!StringUtils_1.StringUtils.isString(r2))
          throw new Error("value must be a string");
        if ("" === r2)
          return i;
        if (r2.length < 2 || "=" === r2.substr(0, 1) || r2.indexOf("=") < 0 && r2.indexOf(":") < 0)
          throw new Error("invalid properties format");
        for (var n = "", e = "", s = false, a = 0, o = StringUtils_1.StringUtils.getLines(r2, [/\s+/g, / *#.*| *!.*/g]); a < o.length; a++) {
          var l = o[a];
          if (l = StringUtils_1.StringUtils.trimLeft(l), s)
            e += EncodingUtils_1.EncodingUtils.unicodeEscapedCharsToUtf8(l);
          else {
            var g = StringUtils_1.StringUtils.replace(l, ["\\=", "\\:"], "xx"), c = Math.min((g + "=").indexOf("="), (g + ":").indexOf(":"));
            "\\" === (n = l.substring(0, c).trim()).substr(n.length - 1, 1) && (n += " "), n = StringUtils_1.StringUtils.replace(n, ["\\\\", "\\ ", "\\#", "\\!", "\\=", "\\:"], ["\\", " ", "#", "!", "=", ":"]), e = StringUtils_1.StringUtils.trimLeft(l.substring(c + 1, l.length));
          }
          "\\" == (e = StringUtils_1.StringUtils.replace(e, ["\\\\", "\\ ", "\\r\\n", "\\n", "\\t"], ["\\u005C", " ", "\r\n", "\n", "	"])).substr(e.length - 1) ? (e = e.substring(0, e.length - 1), s = true) : (s = false, e = EncodingUtils_1.EncodingUtils.unicodeEscapedCharsToUtf8(e)), i._data.hasOwnProperty(n) || i._keys.push(n), i._data[n] = e;
        }
        return i._length = i._keys.length, i;
      }
      return __extends(r, t), r.isJavaProperties = function(t2) {
        try {
          return new r(t2).length() >= 0;
        } catch (i) {
          try {
            return null != t2 && t2 instanceof r;
          } catch (t3) {
            return false;
          }
        }
      }, r.prototype.isEqualTo = function(t2, i) {
        void 0 === i && (i = false);
        var n = null;
        try {
          n = new r(t2);
        } catch (i2) {
          try {
            t2 instanceof r && (n = t2);
          } catch (t3) {
          }
        }
        if (null == n)
          throw new Error("properties does not contain valid java properties data");
        var e = this.getKeys(), s = n.getKeys();
        if (e.length != s.length || i && !ArrayUtils_1.ArrayUtils.isEqualTo(e, s))
          return false;
        for (var a = new ValidationManager_1.ValidationManager(), o = 0, l = e; o < l.length; o++) {
          var g = l[o];
          if (!i && !n.isKey(g))
            return false;
          if (!a.isEqualTo(this.get(g), n.get(g)))
            return false;
        }
        return true;
      }, r.prototype.toString = function() {
        for (var t2 = [], r2 = this.getKeys(), i = r2.length, n = 0; n < i; n++) {
          var e = StringUtils_1.StringUtils.replace(r2[n], ["\\", " ", "#", "!", "=", ":"], ["\\\\", "\\ ", "\\#", "\\!", "\\=", "\\:"]), s = StringUtils_1.StringUtils.replace(this.get(r2[n]), ["\\", " ", "\r\n", "\n", "	"], ["\\\\", "\\ ", "\\r\\n", "\\n", "\\t"]);
          t2.push(e + "=" + EncodingUtils_1.EncodingUtils.utf8ToUnicodeEscapedChars(s));
        }
        return t2.join("\r\n");
      }, r;
    }(HashMapObject_1.HashMapObject);
    exports.JavaPropertiesObject = JavaPropertiesObject;
  }
});

// node_modules/turbocommons-ts/managers/LocalizationManager.js
var require_LocalizationManager = __commonJS({
  "node_modules/turbocommons-ts/managers/LocalizationManager.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringUtils_1 = require_StringUtils();
    var ArrayUtils_1 = require_ArrayUtils();
    var JavaPropertiesObject_1 = require_JavaPropertiesObject();
    var LocalizationManager = function() {
      function t() {
        this.missingKeyFormat = "$exception", this.wildCardsFormat = "{N}", this.isBundleMandatory = false, this._initialized = false, this._locales = [], this._languages = [], this._activeBundle = "", this._activeLocation = "", this._definedLocations = [], this._loadedTranslations = {}, this._filesManager = null, this._httpManager = null;
      }
      return t.prototype.isInitialized = function() {
        return this._initialized;
      }, t.prototype.isLocaleLoaded = function(t2) {
        return this._locales.indexOf(t2) >= 0;
      }, t.prototype.isLanguageLoaded = function(t2) {
        if (2 !== t2.length)
          throw new Error("language must be a valid 2 digit value");
        return this._languages.indexOf(t2) >= 0;
      }, t.prototype.initialize = function(t2, i, e, r, a) {
        var n = this;
        if (void 0 === r && (r = null), void 0 === a && (a = null), t2 ? this._httpManager = t2 : this._filesManager = t2, this._locales = [], this._languages = [], this._activeBundle = "", this._activeLocation = "", this._definedLocations = e, this._loadedTranslations = {}, !ArrayUtils_1.ArrayUtils.isArray(e) || e.length <= 0)
          throw new Error("Locations must be an array of objects");
        for (var o = 0, l = e; o < l.length; o++) {
          var s = l[o];
          if (!s.label || StringUtils_1.StringUtils.isEmpty(s.label) || !s.path || StringUtils_1.StringUtils.isEmpty(s.path) || !s.bundles || !ArrayUtils_1.ArrayUtils.isArray(s.bundles))
            throw new Error("Invalid locations specified");
        }
        this._loadData(i, e.map(function(t3) {
          return { label: t3.label, bundles: t3.bundles };
        }), function(t3) {
          n._initialized = true, null !== r && r(t3);
        }, a);
      }, t.prototype.loadLocales = function(t2, i, e) {
        if (void 0 === i && (i = null), void 0 === e && (e = null), !this._initialized)
          throw new Error("LocalizationManager not initialized. Call initialize() before loading more locales");
        this._loadData(t2, this._definedLocations.map(function(t3) {
          return { label: t3.label, bundles: t3.bundles };
        }), i, e);
      }, t.prototype.loadBundles = function(t2, i, e, r) {
        if (void 0 === i && (i = ""), void 0 === e && (e = null), void 0 === r && (r = null), !ArrayUtils_1.ArrayUtils.isArray(t2) || 0 === t2.length)
          throw new Error("no bundles specified to load on " + i + " location");
        if (!this._initialized)
          throw new Error("LocalizationManager not initialized. Call initialize() before loading more bundles to a location");
        "" === i && (i = this._activeLocation), this._loadData(this._locales, [{ label: i, bundles: t2 }], e, r);
      }, t.prototype._loadData = function(t2, i, e, r) {
        if (void 0 === e && (e = null), void 0 === r && (r = null), !ArrayUtils_1.ArrayUtils.isArray(t2) || t2.length <= 0)
          throw new Error("no locales defined");
        for (var a = [], n = [], o = 0, l = i; o < l.length; o++)
          for (var s = l[o], d = 0, h = s.bundles; d < h.length; d++)
            for (var u = h[d], c = 0, g = t2; c < g.length; c++) {
              for (var _ = g[c], f = false, p = 0, y = this._definedLocations; p < y.length; p++) {
                var v = y[p];
                if (v.label === s.label) {
                  f = true, n.push({ locale: _, bundle: u, location: s.label }), a.push(StringUtils_1.StringUtils.replace(v.path, ["$locale", "$bundle"], [_, u]));
                  break;
                }
              }
              if (!f)
                throw new Error("Undefined location: " + s.label);
            }
        this._locales = this._locales.concat(t2), this._locales = ArrayUtils_1.ArrayUtils.removeDuplicateElements(this._locales), this._languages = this._locales.map(function(t3) {
          return t3.substr(0, 2);
        }), "" === this._activeLocation && (this._activeLocation = i[i.length - 1].label), null !== this._filesManager || this._loadDataFromUrls(a, n, e, r);
      }, t.prototype._loadDataFromUrls = function(t2, i, e, r) {
        var a = this;
        void 0 === e && (e = null), void 0 === r && (r = null);
        var n = function(t3) {
          void 0 === t3 && (t3 = []), i.length > 0 && (a._activeBundle = i[i.length - 1].bundle), null !== e && e(t3);
        };
        t2.length <= 0 ? n() : this._httpManager.execute(t2, function(e2, r2) {
          for (var o = [], l = 0; l < e2.length; l++)
            if (e2[l].isError)
              o.push({ path: e2[l].url, errorMsg: e2[l].errorMsg, errorCode: e2[l].code });
            else {
              var s = i[l].locale, d = i[l].bundle, h = i[l].location, u = StringUtils_1.StringUtils.getPathExtension(t2[l]);
              a._loadedTranslations.hasOwnProperty(h) || (a._loadedTranslations[h] = {}), a._loadedTranslations[h].hasOwnProperty(s) || (a._loadedTranslations[h][s] = {}), a._loadedTranslations[h][s][d] = "json" === u ? a.parseJson(e2[l].response) : a.parseProperties(e2[l].response);
            }
          n(o);
        }, function(t3, i2) {
          null !== r && r(t3, i2);
        });
      }, t.prototype.locales = function() {
        return this._locales;
      }, t.prototype.languages = function() {
        return this._languages;
      }, t.prototype.activeBundle = function() {
        return this._activeBundle;
      }, t.prototype.primaryLocale = function() {
        if (!this._initialized)
          throw new Error("LocalizationManager not initialized");
        return this._locales[0];
      }, t.prototype.primaryLanguage = function() {
        if (!this._initialized)
          throw new Error("LocalizationManager not initialized");
        return this._languages[0];
      }, t.prototype.setActiveBundle = function(t2) {
        for (var i = 0, e = Object.keys(this._loadedTranslations); i < e.length; i++)
          for (var r = e[i], a = 0, n = Object.keys(this._loadedTranslations[r]); a < n.length; a++) {
            var o = n[a];
            if (Object.keys(this._loadedTranslations[r][o]).indexOf(t2) >= 0)
              return this._activeBundle = t2, void (this._activeLocation = r);
          }
        throw new Error("Bundle <" + t2 + "> not loaded");
      }, t.prototype.setPrimaryLocale = function(t2) {
        if (!StringUtils_1.StringUtils.isString(t2))
          throw new Error("Invalid locale value");
        if (!this.isLocaleLoaded(t2))
          throw new Error(t2 + " not loaded");
        for (var i = [t2], e = 0, r = this._locales; e < r.length; e++) {
          var a = r[e];
          a !== t2 && i.push(a);
        }
        this._locales = i, this._languages = this._locales.map(function(t3) {
          return t3.substr(0, 2);
        });
      }, t.prototype.setPrimaryLocales = function(t2) {
        if (!ArrayUtils_1.ArrayUtils.isArray(t2) || ArrayUtils_1.ArrayUtils.hasDuplicateElements(t2) || t2.length <= 0)
          throw new Error("locales must be non empty string array with no duplicate elements");
        for (var i = t2.length - 1; i >= 0; i--)
          this.setPrimaryLocale(t2[i]);
      }, t.prototype.setPrimaryLanguage = function(t2) {
        for (var i = 0, e = this._locales; i < e.length; i++) {
          var r = e[i];
          if (r.substr(0, 2) === t2)
            return this.setPrimaryLocale(r);
        }
        throw new Error(t2 + " not loaded");
      }, t.prototype.setPrimaryLanguages = function(t2) {
        if (!ArrayUtils_1.ArrayUtils.isArray(t2) || ArrayUtils_1.ArrayUtils.hasDuplicateElements(t2) || t2.length <= 0)
          throw new Error("languages must be non empty string array with no duplicate elements");
        for (var i = t2.length - 1; i >= 0; i--)
          this.setPrimaryLanguage(t2[i]);
      }, t.prototype.setLocalesOrder = function(t2) {
        if (!ArrayUtils_1.ArrayUtils.isArray(t2))
          throw new Error("locales must be an array");
        if (t2.length !== this._locales.length)
          throw new Error("locales must contain all the currently loaded locales");
        for (var i = 0, e = t2; i < e.length; i++) {
          var r = e[i];
          if (!this.isLocaleLoaded(r))
            throw new Error(r + " not loaded");
        }
        this._locales = t2, this._languages = this._locales.map(function(t3) {
          return t3.substr(0, 2);
        });
      }, t.prototype.get = function(t2, i, e, r) {
        if (void 0 === i && (i = ""), void 0 === e && (e = ""), void 0 === r && (r = []), !this._initialized)
          throw new Error("LocalizationManager not initialized. Call initialize() before requesting translated texts");
        if ("" === e && ("" !== i && i !== this._activeBundle && this.setActiveBundle(i), e = this._activeLocation), "" === i) {
          if (this.isBundleMandatory)
            throw new Error("bundle is mandatory for key " + t2);
          i = this._activeBundle;
        }
        if (-1 === Object.keys(this._loadedTranslations).indexOf(e))
          throw new Error("Location <" + e + "> not loaded");
        for (var a = 0, n = this._locales; a < n.length; a++) {
          var o = n[a];
          if (Object.keys(this._loadedTranslations[e]).indexOf(o) >= 0) {
            if (-1 === Object.keys(this._loadedTranslations[e][o]).indexOf(i))
              throw new Error("Bundle <" + i + "> not loaded");
            if (Object.keys(this._loadedTranslations[e][o][i]).indexOf(t2) >= 0) {
              this._activeBundle = i, this._activeLocation = e;
              for (var l = this._loadedTranslations[e][o][i][t2], s = StringUtils_1.StringUtils.isString(r) ? [String(r)] : r, d = 0; d < s.length; d++)
                l = StringUtils_1.StringUtils.replace(l, StringUtils_1.StringUtils.replace(this.wildCardsFormat, "N", String(d)), s[d]);
              return l;
            }
          }
        }
        if (this.missingKeyFormat.indexOf("$exception") >= 0)
          throw new Error("key <" + t2 + "> not found on " + i + " - " + e);
        return this.missingKeyFormat.replace("$key", t2);
      }, t.prototype.getStartCase = function(t2, i, e, r) {
        return void 0 === i && (i = ""), void 0 === e && (e = ""), void 0 === r && (r = []), StringUtils_1.StringUtils.formatCase(this.get(t2, i, e, r), StringUtils_1.StringUtils.FORMAT_START_CASE);
      }, t.prototype.getAllUpperCase = function(t2, i, e, r) {
        return void 0 === i && (i = ""), void 0 === e && (e = ""), void 0 === r && (r = []), StringUtils_1.StringUtils.formatCase(this.get(t2, i, e, r), StringUtils_1.StringUtils.FORMAT_ALL_UPPER_CASE);
      }, t.prototype.getAllLowerCase = function(t2, i, e, r) {
        return void 0 === i && (i = ""), void 0 === e && (e = ""), void 0 === r && (r = []), StringUtils_1.StringUtils.formatCase(this.get(t2, i, e, r), StringUtils_1.StringUtils.FORMAT_ALL_LOWER_CASE);
      }, t.prototype.getFirstUpperRestLower = function(t2, i, e, r) {
        return void 0 === i && (i = ""), void 0 === e && (e = ""), void 0 === r && (r = []), StringUtils_1.StringUtils.formatCase(this.get(t2, i, e, r), StringUtils_1.StringUtils.FORMAT_FIRST_UPPER_REST_LOWER);
      }, t.prototype.parseJson = function(t2) {
        return JSON.parse(t2);
      }, t.prototype.parseProperties = function(t2) {
        for (var i = {}, e = new JavaPropertiesObject_1.JavaPropertiesObject(t2), r = 0, a = e.getKeys(); r < a.length; r++) {
          var n = a[r];
          i[n] = e.get(n);
        }
        return i;
      }, t;
    }();
    exports.LocalizationManager = LocalizationManager;
  }
});

// node_modules/turbocommons-ts/managers/ModelHistoryManager.js
var require_ModelHistoryManager = __commonJS({
  "node_modules/turbocommons-ts/managers/ModelHistoryManager.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ObjectUtils_1 = require_ObjectUtils();
    var ArrayUtils_1 = require_ArrayUtils();
    var StringUtils_1 = require_StringUtils();
    var ModelHistoryManager = function() {
      function t(t2) {
        this.maxSnapshots = -1, this._snapshots = [], this._currentState = t2, this._initialState = ObjectUtils_1.ObjectUtils.clone(this._currentState);
      }
      return t.prototype.setInitialState = function() {
        this._initialState = ObjectUtils_1.ObjectUtils.clone(this._currentState), this._snapshots = [];
      }, Object.defineProperty(t.prototype, "get", { get: function() {
        return this._currentState;
      }, enumerable: true, configurable: true }), Object.defineProperty(t.prototype, "tags", { get: function() {
        return this._snapshots.map(function(t2) {
          return t2.tag;
        });
      }, enumerable: true, configurable: true }), Object.defineProperty(t.prototype, "snapshots", { get: function() {
        return this._snapshots.map(function(t2) {
          return t2.state;
        });
      }, enumerable: true, configurable: true }), t.prototype.getSnapshotsByTag = function(t2) {
        var s = "tags must be a non empty string array. To get the full list of snapshots, use the <snapshots> property";
        if (!ArrayUtils_1.ArrayUtils.isArray(t2))
          throw new Error(s);
        if (t2.length <= 0)
          throw new Error(s);
        for (var e = [], i = 0; i < this._snapshots.length; i++)
          t2.indexOf(this._snapshots[i].tag) >= 0 && e.push(this._snapshots[i].state);
        return e;
      }, t.prototype.saveSnapshot = function(t2) {
        if (void 0 === t2 && (t2 = ""), !StringUtils_1.StringUtils.isString(t2))
          throw new Error("tag must be a string");
        if (this._snapshots.length > 0 && this._snapshots[this._snapshots.length - 1].tag === t2 && ObjectUtils_1.ObjectUtils.isEqualTo(this._currentState, this._snapshots[this._snapshots.length - 1].state))
          return false;
        if (this._snapshots.length <= 0 && ObjectUtils_1.ObjectUtils.isEqualTo(this._currentState, this._initialState))
          return false;
        if (this.maxSnapshots > 0 && this._snapshots.length >= this.maxSnapshots) {
          var s = this._snapshots.shift();
          this._initialState = s.state;
        }
        return this._snapshots.push({ state: ObjectUtils_1.ObjectUtils.clone(this._currentState), tag: t2 }), true;
      }, Object.defineProperty(t.prototype, "isUndoPossible", { get: function() {
        return this._snapshots.length > 0 || !ObjectUtils_1.ObjectUtils.isEqualTo(this._currentState, this._initialState);
      }, enumerable: true, configurable: true }), t.prototype.undo = function(t2) {
        if (void 0 === t2 && (t2 = []), 0 === this._snapshots.length && !ObjectUtils_1.ObjectUtils.isEqualTo(this._currentState, this._initialState))
          return this._currentState = ObjectUtils_1.ObjectUtils.clone(this._initialState), true;
        if (this._snapshots.length > 0) {
          var s = this._snapshots[this._snapshots.length - 1];
          return ObjectUtils_1.ObjectUtils.isEqualTo(this._currentState, s.state) || t2.length > 0 && t2.indexOf(s.tag) < 0 ? (this._snapshots.pop(), this.undo(t2)) : (this._currentState = ObjectUtils_1.ObjectUtils.clone(s.state), true);
        }
        return false;
      }, t.prototype.undoAll = function() {
        return !!this.isUndoPossible && (this._currentState = ObjectUtils_1.ObjectUtils.clone(this._initialState), this._snapshots = [], true);
      }, t.prototype.redo = function() {
      }, t;
    }();
    exports.ModelHistoryManager = ModelHistoryManager;
  }
});

// node_modules/turbocommons-ts/managers/SerializationManager.js
var require_SerializationManager = __commonJS({
  "node_modules/turbocommons-ts/managers/SerializationManager.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var JavaPropertiesObject_1 = require_JavaPropertiesObject();
    var ArrayUtils_1 = require_ArrayUtils();
    var ObjectUtils_1 = require_ObjectUtils();
    var SerializationManager = function() {
      function t() {
        this.strictMode = true;
      }
      return t.prototype.classToJson = function(t2) {
        return JSON.stringify(t2);
      }, t.prototype.classToObject = function() {
      }, t.prototype.javaPropertiesObjectToString = function(t2) {
        return t2.toString();
      }, t.prototype.jsonToClass = function(t2, e) {
        return this.objectToClass(JSON.parse(t2), e);
      }, t.prototype.objectToClass = function(t2, e) {
        var r = ObjectUtils_1.ObjectUtils.getKeys(t2), o = e.constructor.name, i = ObjectUtils_1.ObjectUtils.getKeys(e);
        if (this.strictMode && r.length !== i.length)
          throw new Error("(strict mode): [" + r.join(",") + "] keys do not match " + o + " props: [" + i.join(",") + "]");
        for (var s = 0, n = r; s < n.length; s++) {
          var a = n[s];
          if (e.hasOwnProperty(a)) {
            var c = t2[a];
            if (null !== c) {
              if (null !== e[a] && void 0 !== e[a]) {
                var l = "<" + o + "." + a + "> was " + typeof c + " but expected to be ";
                if (ArrayUtils_1.ArrayUtils.isArray(e[a])) {
                  if (!ArrayUtils_1.ArrayUtils.isArray(c))
                    throw new Error(l + "array");
                  if (e[a].length > 0) {
                    if (1 !== e[a].length)
                      throw new Error("To define a typed list, <" + o + "." + a + "> must contain only 1 default typed element");
                    var f = e[a][0], p = ObjectUtils_1.ObjectUtils.isObject(f) && "Object" !== f.constructor.name;
                    e[a] = [];
                    for (var j = 0, u = c; j < u.length; j++) {
                      var b = u[j];
                      if (p)
                        b = this.objectToClass(b, ObjectUtils_1.ObjectUtils.clone(f));
                      else if (typeof b != typeof f)
                        throw new Error("<" + o + "." + a + "> is defined as array of " + typeof f + " but received " + typeof b);
                      e[a].push(b);
                    }
                    continue;
                  }
                }
                if (ObjectUtils_1.ObjectUtils.isObject(e[a])) {
                  if (!ObjectUtils_1.ObjectUtils.isObject(c))
                    throw new Error(l + e[a].constructor.name);
                  "Object" !== e[a].constructor.name && (c = this.objectToClass(c, e[a]));
                }
                if (typeof e[a] != typeof c)
                  throw new Error(l + typeof e[a]);
              }
              e[a] = c;
            }
          } else if (this.strictMode)
            throw new Error("(strict mode): <" + a + "> not found in " + o);
        }
        return e;
      }, t.prototype.stringToJavaPropertiesObject = function(t2) {
        return new JavaPropertiesObject_1.JavaPropertiesObject(t2);
      }, t;
    }();
    exports.SerializationManager = SerializationManager;
  }
});

// node_modules/turbocommons-ts/model/BaseStrictClass.js
var require_BaseStrictClass = __commonJS({
  "node_modules/turbocommons-ts/model/BaseStrictClass.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BaseStrictClass = function() {
      return function() {
      };
    }();
    exports.BaseStrictClass = BaseStrictClass;
  }
});

// node_modules/turbocommons-ts/model/TableObject.js
var require_TableObject = __commonJS({
  "node_modules/turbocommons-ts/model/TableObject.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringUtils_1 = require_StringUtils();
    var ArrayUtils_1 = require_ArrayUtils();
    var NumericUtils_1 = require_NumericUtils();
    var HashMapObject_1 = require_HashMapObject();
    var TableObject = function() {
      function t(t2, r) {
        if (void 0 === t2 && (t2 = 0), void 0 === r && (r = 0), this._columnsCount = 0, this._rowsCount = 0, !(NumericUtils_1.NumericUtils.isInteger(t2) && t2 >= 0))
          throw new Error("constructor rows must be a positive integer");
        if (this._rowsCount = t2, NumericUtils_1.NumericUtils.isInteger(r) && r >= 0)
          this._columnsCount = Number(r);
        else {
          if (!ArrayUtils_1.ArrayUtils.isArray(r))
            throw new Error("constructor columns must be an integer or an array of strings");
          this._columnsCount = r.length, this.setColumnNames(r);
        }
        if (this._columnsCount + this._rowsCount > 0 && (0 == this._columnsCount || 0 == this._rowsCount))
          throw new Error("constructor columns cannot be empty if rows are positive and vice versa");
        this._columnNames = new HashMapObject_1.HashMapObject(), this._cells = new HashMapObject_1.HashMapObject();
      }
      return t.prototype.setColumnName = function(t2, r) {
        var e = this._validateColumnIndex(t2);
        if (!StringUtils_1.StringUtils.isString(r))
          throw new Error("name must be a string");
        return this._columnNames.set(String(e), r), true;
      }, t.prototype.setColumnNames = function(t2) {
        if (this._columnsCount == t2.length) {
          if (ArrayUtils_1.ArrayUtils.hasDuplicateElements(t2))
            throw new Error("array must not contain duplicate elements");
          var r = t2.length;
          this._columnNames = new HashMapObject_1.HashMapObject();
          for (var e = 0; e < r; e++) {
            if (!StringUtils_1.StringUtils.isString(t2[e]))
              throw new Error("List of names must be an array of strings");
            this._columnNames.set(String(e), t2[e]);
          }
          return t2;
        }
        throw new Error("List of names must match number of columns");
      }, t.prototype.getColumnNames = function() {
        for (var t2 = [], r = 0; r < this._columnsCount; r++) {
          var e = String(r);
          t2.push(this._columnNames.isKey(e) ? this._columnNames.get(e) : "");
        }
        return t2;
      }, t.prototype.getColumnName = function(t2) {
        var r = String(this._validateColumnIndex(t2));
        return this._columnNames.isKey(r) ? this._columnNames.get(r) : "";
      }, t.prototype.getColumnIndex = function(t2) {
        if (!StringUtils_1.StringUtils.isString(t2) || "" === t2)
          throw new Error("value must be a non empty string");
        for (var r = 0, e = this._columnNames.getKeys(); r < e.length; r++) {
          var n = e[r];
          if (this._columnNames.get(n) === t2)
            return Number(n);
        }
        throw new Error("provided column name does not exist");
      }, t.prototype.getColumn = function(t2) {
        for (var r = [], e = this._validateColumnIndex(t2), n = 0; n < this._rowsCount; n++)
          r.push(this.getCell(n, e));
        return r;
      }, t.prototype.addColumns = function(t2, r, e) {
        if (void 0 === r && (r = []), void 0 === e && (e = -1), !ArrayUtils_1.ArrayUtils.isArray(r))
          throw new Error("names must be an array");
        if (!NumericUtils_1.NumericUtils.isInteger(t2) || t2 <= 0)
          throw new Error("number must be a positive integer");
        if (!NumericUtils_1.NumericUtils.isInteger(e) || e < -1 || e >= this._columnsCount)
          throw new Error("at must be a valid column index");
        if (e >= 0)
          for (var n = this._columnsCount - 1; n >= e; n--) {
            this._columnNames.isKey(String(n)) && this._columnNames.rename(String(n), String(n + t2));
            for (var s = 0; s < this._rowsCount; s++) {
              var i = String(s) + "-" + String(n);
              this._cells.isKey(i) && this._cells.rename(i, String(s) + "-" + String(n + t2));
            }
          }
        var o = r.length;
        if (o > 0) {
          if (o != t2)
            throw new Error("names length must be the same as number");
          var u = e < 0 ? this._columnsCount : e;
          for (n = 0; n < o; n++)
            this._columnNames.set(String(u + n), r[n]);
        }
        return this._columnsCount += t2, true;
      }, t.prototype.setColumn = function(t2, r) {
        var e = r.length;
        if (e <= 0)
          throw new Error("data must not be empty");
        if (this._rowsCount != e)
          throw new Error("data length and number of rows must match");
        for (var n = this._validateColumnIndex(t2), s = 0; s < this._rowsCount; s++)
          this.setCell(s, n, r[s]);
      }, t.prototype.removeColumn = function(t2) {
        var r = this._validateColumnIndex(t2);
        this._columnNames.isKey(String(r)) && this._columnNames.remove(String(r));
        for (var e = 0; e < this._rowsCount; e++) {
          var n = String(e) + "-" + String(r);
          this._cells.isKey(n) && this._cells.remove(n);
        }
        for (e = r + 1; e < this._columnsCount; e++) {
          this._columnNames.isKey(String(e)) && this._columnNames.rename(String(e), String(e - 1));
          for (var s = 0; s < this._rowsCount; s++) {
            n = String(s) + "-" + String(e);
            this._cells.isKey(n) && this._cells.rename(n, String(s) + "-" + String(e - 1));
          }
        }
        this._columnsCount--, this._columnsCount <= 0 && (this._rowsCount = 0);
      }, t.prototype.getCell = function(t2, r) {
        var e = this._validateRowIndex(t2) + "-" + this._validateColumnIndex(r);
        return this._cells.isKey(e) ? this._cells.get(e) : null;
      }, t.prototype.setCell = function(t2, r, e) {
        var n = this._validateRowIndex(t2), s = this._validateColumnIndex(r);
        return this._cells.set(n + "-" + s, e);
      }, t.prototype.getRow = function(t2) {
        for (var r = [], e = this._validateRowIndex(t2), n = 0; n < this._columnsCount; n++)
          r.push(this.getCell(e, n));
        return r;
      }, t.prototype.addRows = function(t2, r) {
        if (void 0 === r && (r = -1), !NumericUtils_1.NumericUtils.isInteger(t2) || t2 <= 0)
          throw new Error("number must be a positive integer");
        if (!NumericUtils_1.NumericUtils.isInteger(r) || r < -1 || r >= this._rowsCount)
          throw new Error("at must be a valid row index");
        if (r >= 0)
          for (var e = this._rowsCount - 1; e >= r; e--)
            for (var n = 0; n < this._columnsCount; n++) {
              var s = String(e) + "-" + String(n);
              this._cells.isKey(s) && this._cells.rename(s, e + t2 + "-" + String(n));
            }
        return this._rowsCount += t2, true;
      }, t.prototype.setRow = function(t2, r) {
        var e = r.length;
        if (e <= 0)
          throw new Error("data must not be empty");
        if (this._columnsCount != e)
          throw new Error("data length and number of columns must match");
        for (var n = this._validateRowIndex(t2), s = 0; s < this._columnsCount; s++)
          this.setCell(n, s, r[s]);
      }, t.prototype.removeRow = function(t2) {
        for (var r = this._validateRowIndex(t2), e = 0; e < this._columnsCount; e++) {
          var n = String(r) + "-" + String(e);
          this._cells.isKey(n) && this._cells.remove(n);
        }
        for (e = r + 1; e < this._rowsCount; e++)
          for (var s = 0; s < this._columnsCount; s++) {
            n = String(e) + "-" + String(s);
            this._cells.isKey(n) && this._cells.rename(n, String(e - 1) + "-" + String(s));
          }
        this._rowsCount--, this._rowsCount <= 0 && (this._columnsCount = 0);
      }, t.prototype.countRows = function() {
        return this._rowsCount;
      }, t.prototype.countColumns = function() {
        return this._columnsCount;
      }, t.prototype.countCells = function() {
        return this._rowsCount * this._columnsCount;
      }, t.prototype._validateColumnIndex = function(t2) {
        var r = NumericUtils_1.NumericUtils.isInteger(t2) ? Number(t2) : -1, e = this._columnNames.getValues(), n = this._columnNames.getKeys(), s = e.length;
        if (StringUtils_1.StringUtils.isString(t2)) {
          for (var i = 0; i < s; i++)
            if (t2 === e[i]) {
              r = Number(n[i]);
              break;
            }
        }
        if (r < 0 || r >= this._columnsCount)
          throw new Error("Invalid column value");
        return r;
      }, t.prototype._validateRowIndex = function(t2) {
        var r = NumericUtils_1.NumericUtils.isInteger(t2) ? t2 : -1;
        if (r < 0 || r >= this._rowsCount)
          throw new Error("Invalid row value");
        return r;
      }, t;
    }();
    exports.TableObject = TableObject;
  }
});

// node_modules/turbocommons-ts/model/CSVObject.js
var require_CSVObject = __commonJS({
  "node_modules/turbocommons-ts/model/CSVObject.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var t = function(r, e) {
        return (t = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t2, r2) {
          t2.__proto__ = r2;
        } || function(t2, r2) {
          for (var e2 in r2)
            r2.hasOwnProperty(e2) && (t2[e2] = r2[e2]);
        })(r, e);
      };
      return function(r, e) {
        function n() {
          this.constructor = r;
        }
        t(r, e), r.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    var TableObject_1 = require_TableObject();
    var StringUtils_1 = require_StringUtils();
    var ArrayUtils_1 = require_ArrayUtils();
    var CSVObject = function(t) {
      function r(r2, e, n, i) {
        void 0 === r2 && (r2 = ""), void 0 === e && (e = false), void 0 === n && (n = ","), void 0 === i && (i = '"');
        var s = t.call(this) || this;
        if (s._hasHeaders = false, !StringUtils_1.StringUtils.isString(r2))
          throw new Error("constructor expects a string value");
        if (StringUtils_1.StringUtils.isEmpty(r2))
          return s;
        for (var o = 0, l = 0, u = false, a = "", c = r2.length, h = 0; h < c; h++) {
          var f = r2.charAt(h);
          f !== n || u ? f !== i ? "\r" !== f && "\n" !== f ? a += f : (u ? a += f : l > 0 && (s._insertField(o, l, a), o++, a = "", l = 0), "\r" === f && "\n" === r2.substr(h + 1, 1) && (u && (a += "\n"), h++)) : u && r2.substr(h + 1, 1) === i ? (a += f, h++) : (u = !u) ? a = "" : h = s._findNextDelimiterIndex(r2, h, n, c) - 1 : (s._insertField(o, l, a), a = "", l++);
        }
        return ("" != a || l >= s._columnsCount) && s._insertField(o, l, a), e && s._defineHeaders(), s;
      }
      return __extends(r, t), r.prototype.getCell = function(r2, e) {
        var n = t.prototype.getCell.call(this, r2, e);
        return null === n ? "" : n;
      }, r.prototype.setCell = function(r2, e, n) {
        if (!StringUtils_1.StringUtils.isString(n))
          throw new Error("value must be a string");
        return t.prototype.setCell.call(this, r2, e, n);
      }, r.isCSV = function(t2) {
        try {
          return new r(t2).countCells() >= 0;
        } catch (e) {
          try {
            return null !== t2 && t2 instanceof r;
          } catch (t3) {
            return false;
          }
        }
      }, r.prototype.isEqualTo = function(t2) {
        var e = null;
        try {
          e = new r(t2, this._hasHeaders);
        } catch (n2) {
          try {
            t2 instanceof r && (e = t2);
          } catch (t3) {
          }
        }
        if (null == e)
          throw new Error("csv does not contain valid csv data");
        var n = this.countRows(), i = this.countColumns();
        if (0 === this.countCells() && 0 === e.countCells())
          return true;
        if (this._hasHeaders && !ArrayUtils_1.ArrayUtils.isEqualTo(this.getColumnNames(), e.getColumnNames()))
          return false;
        if (n !== e.countRows() || i !== e.countColumns())
          return false;
        for (var s = 0; s < n; s++)
          for (var o = 0; o < i; o++) {
            var l = this.getCell(s, o);
            null === l && (l = "");
            var u = e.getCell(s, o);
            if (null === u && (u = ""), l !== u)
              return false;
          }
        return true;
      }, r.prototype.toString = function(t2, r2) {
        void 0 === t2 && (t2 = ","), void 0 === r2 && (r2 = '"');
        var e = "";
        if (this._hasHeaders) {
          for (var n = [], i = 0, s = this.getColumnNames(); i < s.length; i++) {
            var o = s[i];
            n.push(this._escapeField(o, t2, r2));
          }
          e += n.join(t2) + "\r\n";
        }
        for (var l = this.countRows(), u = this.countColumns(), a = 0; a < l; a++) {
          n = [];
          for (var c = 0; c < u; c++) {
            var h = "";
            try {
              h = this._escapeField(this._cells.get(a + "-" + c), t2, r2);
            } catch (t3) {
            }
            n.push(h);
          }
          e += n.join(t2) + "\r\n";
        }
        return l > 0 ? e.substring(0, e.length - 2) : e;
      }, r.prototype._insertField = function(t2, r2, e) {
        t2 >= this._rowsCount && this._rowsCount++, r2 >= this._columnsCount && this._columnsCount++, this._cells.set(t2 + "-" + r2, e);
      }, r.prototype._escapeField = function(t2, r2, e) {
        return (t2.indexOf("\r") >= 0 || t2.indexOf("\n") >= 0 || t2.indexOf(e) >= 0 || t2.indexOf(r2) >= 0) && (t2 = e + (t2 = StringUtils_1.StringUtils.replace(t2, [e], [e + e])) + e), t2;
      }, r.prototype._findNextDelimiterIndex = function(t2, r2, e, n) {
        for (var i = r2 + 1; i < n; i++) {
          var s = t2.charAt(i);
          if (s === e || "\r" === s || "\n" === s)
            return i;
        }
        return n;
      }, r.prototype._defineHeaders = function() {
        var t2 = this.getRow(0);
        if (ArrayUtils_1.ArrayUtils.hasDuplicateElements(t2)) {
          for (var r2 = 0, e = [], n = ArrayUtils_1.ArrayUtils.getDuplicateElements(t2), i = 0, s = t2; i < s.length; i++) {
            var o = s[i];
            if (null === o || "" === o)
              o = "(" + ++r2 + ")";
            else
              for (var l = 0, u = n; l < u.length; l++) {
                if (o === u[l]) {
                  o = o + "(" + ++r2 + ")";
                  break;
                }
              }
            e.push(o);
          }
          this.setColumnNames(e);
        } else
          this.setColumnNames(t2);
        this.removeRow(0), this._hasHeaders = true;
      }, r;
    }(TableObject_1.TableObject);
    exports.CSVObject = CSVObject;
  }
});

// node_modules/turbocommons-ts/model/DateTimeObject.js
var require_DateTimeObject = __commonJS({
  "node_modules/turbocommons-ts/model/DateTimeObject.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringUtils_1 = require_StringUtils();
    var NumericUtils_1 = require_NumericUtils();
    var DateTimeObject = function() {
      function t(t2) {
        void 0 === t2 && (t2 = ""), this._dateTimeString = "", this._dateTimeStringExploded = [], StringUtils_1.StringUtils.isEmpty(t2) ? this._dateTimeStringExploded = this._explodeISO8601String((/* @__PURE__ */ new Date()).toISOString()) : this._dateTimeStringExploded = this._explodeISO8601String(this._dateTimeString);
      }
      return t.isValidDateTime = function(t2) {
        if (StringUtils_1.StringUtils.isString(t2) && t2.substr(-1).match(/^[a-z0-9]+$/i)) {
          if (t2.match(/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/)) {
            var e = t2.split("-");
            if (e.length >= 3) {
              var r = new Date(Number(e[0]), Number(e[1]), Number(e[2].substr(0, 2)));
              return r.getMonth() + 1 === Number(e[1]) && r.getDate() === Number(e[2].substr(0, 2)) && r.getFullYear() === Number(e[0]);
            }
            return true;
          }
        }
        return "function" == typeof t2;
      }, t.isEqual = function(e, r) {
        return 0 === t.compare(e, r);
      }, t.getMonthName = function(t2) {
        if (!NumericUtils_1.NumericUtils.isNumeric(t2) || t2 > 12 || t2 < 1)
          throw new Error("Provided value is not a valid month number between 1 and 12");
        return ["JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"][t2 - 1];
      }, t.getDayName = function(t2) {
        if (!NumericUtils_1.NumericUtils.isNumeric(t2) || t2 > 7 || t2 < 1)
          throw new Error("Provided value is not a valid day number between 1 and 7");
        return ["SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY"][t2 - 1];
      }, t.getCurrentYear = function() {
        return (/* @__PURE__ */ new Date()).getFullYear();
      }, t.getCurrentMonth = function() {
        return (/* @__PURE__ */ new Date()).getMonth() + 1;
      }, t.getCurrentDay = function() {
        return (/* @__PURE__ */ new Date()).getDate();
      }, t.getCurrentDayOfWeek = function() {
      }, t.getCurrentHour = function() {
        return (/* @__PURE__ */ new Date()).getHours();
      }, t.getCurrentMinute = function() {
        return (/* @__PURE__ */ new Date()).getMinutes();
      }, t.getCurrentSecond = function() {
        return (/* @__PURE__ */ new Date()).getSeconds();
      }, t.getCurrentMiliSecond = function() {
        return Math.round((/* @__PURE__ */ new Date()).getMilliseconds() / 1e3);
      }, t.getCurrentMicroSecond = function() {
      }, t.getCurrentTimeZoneOffset = function() {
        return (/* @__PURE__ */ new Date()).getTimezoneOffset();
      }, t.compare = function(e, r) {
        if (t.isValidDateTime(e) && t.isValidDateTime(r)) {
          StringUtils_1.StringUtils.isString(e) && (e = new t(e)), StringUtils_1.StringUtils.isString(r) && (r = new t(r)), e.setUTC(), r.setUTC();
          var i = e.toString(), n = r.toString();
          if (i === n)
            return 0;
          var o = [i, n];
          return o.sort(), o[0] === i ? 2 : 1;
        }
        throw new Error("Provided value is not a valid ISO 8601 date time format");
      }, t.prototype.getYear = function() {
        return Number(this._dateTimeStringExploded[0]);
      }, t.prototype.getMonth = function() {
        return Number(this._dateTimeStringExploded[1]);
      }, t.prototype.getDay = function() {
        return Number(this._dateTimeStringExploded[2]);
      }, t.prototype.getDayOfWeek = function() {
      }, t.prototype.getHour = function() {
        return Number(this._dateTimeStringExploded[3]);
      }, t.prototype.getMinute = function() {
        return Number(this._dateTimeStringExploded[4]);
      }, t.prototype.getSecond = function() {
        return Number(this._dateTimeStringExploded[5]);
      }, t.prototype.getMiliSecond = function() {
        return Math.round(this.getMicroSecond() / 1e3);
      }, t.prototype.getMicroSecond = function() {
        return Number(this._dateTimeStringExploded[6]);
      }, t.prototype.getTimeZoneOffset = function() {
        return new Date(this._dateTimeString).getTimezoneOffset();
      }, t.prototype.getFirstDayOfMonth = function() {
      }, t.prototype.getLastDayOfMonth = function() {
      }, t.prototype.setLocalTimeZone = function() {
      }, t.prototype.isUTC = function() {
        return 0 === this.getTimeZoneOffset();
      }, t.prototype.setUTC = function() {
        return this._dateTimeStringExploded = this._explodeISO8601String(this._dateTimeString), this;
      }, t.prototype.toString = function(t2) {
        void 0 === t2 && (t2 = "Y-M-DTH:N:S.UOffset");
        var e = this._dateTimeStringExploded;
        return t2 = StringUtils_1.StringUtils.replace(t2, "Offset", e[7].substr(0)), t2 = StringUtils_1.StringUtils.replace(t2, "Y", e[0]), t2 = StringUtils_1.StringUtils.replace(t2, "y", e[0].substr(2)), t2 = StringUtils_1.StringUtils.replace(t2, "M", e[1]), t2 = StringUtils_1.StringUtils.replace(t2, "m", String(Number(e[1]))), t2 = StringUtils_1.StringUtils.replace(t2, "D", e[2]), t2 = StringUtils_1.StringUtils.replace(t2, "d", String(Number(e[2]))), t2 = StringUtils_1.StringUtils.replace(t2, "H", e[3]), t2 = StringUtils_1.StringUtils.replace(t2, "h", String(Number(e[3]))), t2 = StringUtils_1.StringUtils.replace(t2, "N", e[4]), t2 = StringUtils_1.StringUtils.replace(t2, "n", String(Number(e[4]))), t2 = StringUtils_1.StringUtils.replace(t2, "S", e[5]), t2 = StringUtils_1.StringUtils.replace(t2, "s", String(Number(e[5]))), t2 = StringUtils_1.StringUtils.replace(t2, "u", StringUtils_1.StringUtils.pad(String(Math.min(999, Math.round(Number(e[6]) / 1e3))), 3, "0")), StringUtils_1.StringUtils.replace(t2, "U", StringUtils_1.StringUtils.pad(e[6], 6, "0", "RIGHT"));
      }, t.prototype.compareTo = function(e) {
        return t.compare(this, e);
      }, t.prototype.isEqualTo = function(e) {
        return 0 === t.compare(this, e);
      }, t.prototype._explodeISO8601String = function(t2) {
        var e = ["", "01", "01", "00", "00", "00", "000000", ""];
        "z" === t2.substr(t2.length - 1, 1).toLowerCase() && (t2 = t2.substr(0, t2.length - 1) + "+00:00");
        for (var r = t2.split(/[+-.: TZ]/), i = 0; r.length > 0 && i < 6; )
          e[i] = r.shift(), i++;
        var n = r.length;
        return 1 !== n && 3 !== n || (e[6] = r.shift() + "000"), 2 !== n && 3 !== n || (e[7] = t2.substr(t2.length - 6, 1) + r[0] + ":" + r[1]), e;
      }, t;
    }();
    exports.DateTimeObject = DateTimeObject;
  }
});

// node_modules/turbocommons-ts/utils/ConversionUtils.js
var require_ConversionUtils = __commonJS({
  "node_modules/turbocommons-ts/utils/ConversionUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var StringUtils_1 = require_StringUtils();
    var ConversionUtils = function() {
      function r() {
      }
      return r.stringToBase64 = function(r2) {
        if (null === r2 || void 0 === r2)
          return "";
        if (!StringUtils_1.StringUtils.isString(r2))
          throw new Error("ConversionUtils.stringToBase64: value is not a string");
        var t, n, i, e, o, a, s, C = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", h = "";
        r2 = function(r3) {
          var t2 = "";
          r3 = r3.replace(/\r\n/g, "\n");
          for (var n2 = 0; n2 < r3.length; n2++) {
            var i2 = r3.charCodeAt(n2);
            i2 < 128 ? t2 += String.fromCharCode(i2) : i2 > 127 && i2 < 2048 ? (t2 += String.fromCharCode(i2 >> 6 | 192), t2 += String.fromCharCode(63 & i2 | 128)) : (t2 += String.fromCharCode(i2 >> 12 | 224), t2 += String.fromCharCode(i2 >> 6 & 63 | 128), t2 += String.fromCharCode(63 & i2 | 128));
          }
          return t2;
        }(r2);
        for (var f = 0; f < r2.length; )
          e = (t = r2.charCodeAt(f++)) >> 2, o = (3 & t) << 4 | (n = r2.charCodeAt(f++)) >> 4, a = (15 & n) << 2 | (i = r2.charCodeAt(f++)) >> 6, s = 63 & i, isNaN(n) ? a = s = 64 : isNaN(i) && (s = 64), h = h + C.charAt(e) + C.charAt(o) + C.charAt(a) + C.charAt(s);
        return h;
      }, r.base64ToString = function(r2) {
        if (null === r2 || void 0 === r2)
          return "";
        if (!StringUtils_1.StringUtils.isString(r2))
          throw new Error("ConversionUtils.stringToBase64: value is not a string");
        var t, n, i, e, o, a, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", C = "", h = 0;
        for (r2 = r2.replace(/[^A-Za-z0-9\+\/\=]/g, ""); h < r2.length; )
          t = s.indexOf(r2.charAt(h++)) << 2 | (e = s.indexOf(r2.charAt(h++))) >> 4, n = (15 & e) << 4 | (o = s.indexOf(r2.charAt(h++))) >> 2, i = (3 & o) << 6 | (a = s.indexOf(r2.charAt(h++))), C += String.fromCharCode(t), 64 != o && (C += String.fromCharCode(n)), 64 != a && (C += String.fromCharCode(i));
        return function(r3) {
          for (var t2 = "", n2 = 0, i2 = 0, e2 = 0; n2 < r3.length; )
            if ((i2 = r3.charCodeAt(n2)) < 128)
              t2 += String.fromCharCode(i2), n2++;
            else if (i2 > 191 && i2 < 224)
              e2 = r3.charCodeAt(n2 + 1), t2 += String.fromCharCode((31 & i2) << 6 | 63 & e2), n2 += 2;
            else {
              e2 = r3.charCodeAt(n2 + 1);
              var o2 = r3.charCodeAt(n2 + 2);
              t2 += String.fromCharCode((15 & i2) << 12 | (63 & e2) << 6 | 63 & o2), n2 += 3;
            }
          return t2;
        }(C);
      }, r;
    }();
    exports.ConversionUtils = ConversionUtils;
  }
});

// node_modules/turbocommons-ts/index.js
var require_turbocommons_ts = __commonJS({
  "node_modules/turbocommons-ts/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var BrowserManager_1 = require_BrowserManager();
    exports.BrowserManager = BrowserManager_1.BrowserManager;
    var HTTPManager_1 = require_HTTPManager();
    exports.HTTPManager = HTTPManager_1.HTTPManager;
    var HTTPManagerBaseRequest_1 = require_HTTPManagerBaseRequest();
    exports.HTTPManagerBaseRequest = HTTPManagerBaseRequest_1.HTTPManagerBaseRequest;
    var HTTPManagerGetRequest_1 = require_HTTPManagerGetRequest();
    exports.HTTPManagerGetRequest = HTTPManagerGetRequest_1.HTTPManagerGetRequest;
    var HTTPManagerPostRequest_1 = require_HTTPManagerPostRequest();
    exports.HTTPManagerPostRequest = HTTPManagerPostRequest_1.HTTPManagerPostRequest;
    var LocalizationManager_1 = require_LocalizationManager();
    exports.LocalizationManager = LocalizationManager_1.LocalizationManager;
    var ModelHistoryManager_1 = require_ModelHistoryManager();
    exports.ModelHistoryManager = ModelHistoryManager_1.ModelHistoryManager;
    var SerializationManager_1 = require_SerializationManager();
    exports.SerializationManager = SerializationManager_1.SerializationManager;
    var ValidationManager_1 = require_ValidationManager();
    exports.ValidationManager = ValidationManager_1.ValidationManager;
    var BaseStrictClass_1 = require_BaseStrictClass();
    exports.BaseStrictClass = BaseStrictClass_1.BaseStrictClass;
    var CSVObject_1 = require_CSVObject();
    exports.CSVObject = CSVObject_1.CSVObject;
    var DateTimeObject_1 = require_DateTimeObject();
    exports.DateTimeObject = DateTimeObject_1.DateTimeObject;
    var HashMapObject_1 = require_HashMapObject();
    exports.HashMapObject = HashMapObject_1.HashMapObject;
    var JavaPropertiesObject_1 = require_JavaPropertiesObject();
    exports.JavaPropertiesObject = JavaPropertiesObject_1.JavaPropertiesObject;
    var TableObject_1 = require_TableObject();
    exports.TableObject = TableObject_1.TableObject;
    var ArrayUtils_1 = require_ArrayUtils();
    exports.ArrayUtils = ArrayUtils_1.ArrayUtils;
    var ConversionUtils_1 = require_ConversionUtils();
    exports.ConversionUtils = ConversionUtils_1.ConversionUtils;
    var EncodingUtils_1 = require_EncodingUtils();
    exports.EncodingUtils = EncodingUtils_1.EncodingUtils;
    var NumericUtils_1 = require_NumericUtils();
    exports.NumericUtils = NumericUtils_1.NumericUtils;
    var ObjectUtils_1 = require_ObjectUtils();
    exports.ObjectUtils = ObjectUtils_1.ObjectUtils;
    var StringUtils_1 = require_StringUtils();
    exports.StringUtils = StringUtils_1.StringUtils;
  }
});
export default require_turbocommons_ts();
//# sourceMappingURL=turbocommons-ts.js.map
